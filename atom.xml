<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Developer&#39;s Challenges</title>
  <icon>https://developerschallenges.com/favicon-96x96.png</icon>
  
  <link href="https://developerschallenges.com/atom.xml" rel="self"/>
  
  <link href="https://developerschallenges.com/"/>
  <updated>2021-01-06T18:53:41.094Z</updated>
  <id>https://developerschallenges.com/</id>
  
  <author>
    <name>Dalibor Mesarić</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Embed Twitter timeline by search phrase or hashtag</title>
    <link href="https://developerschallenges.com/2020/12/28/embed-twitter-timeline-by-search-phrase-or-hashtag/"/>
    <id>https://developerschallenges.com/2020/12/28/embed-twitter-timeline-by-search-phrase-or-hashtag/</id>
    <published>2020-12-27T23:00:00.000Z</published>
    <updated>2021-01-06T18:53:41.094Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2020-12-28-embed-twitter-timeline-by-search-phrase-or-hashtag/hero.png" alt="Embed Twitter timeline by search phrase or hashtag"></p><p>Over the years Twitter transformed quite a bit, so it is not really possible to use the official way of embedding a timeline by search phrase or hashtag. In this blog post I explain how I managed to create a workaround using collections.</p><a id="more"></a><hr><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>During 2018 <a href="https://twitter.com/twitterdev/status/977248277279182848">Twitter retired their widget platform</a> and with that the ability to embed search timelines. They proposed a replacement using collections, so here is my solution.</p><h2 id="Official-way-of-embedding-a-timeline"><a href="#Official-way-of-embedding-a-timeline" class="headerlink" title="Official way of embedding a timeline"></a>Official way of embedding a timeline</h2><p>Both Twitter <a href="https://help.twitter.com/en/using-twitter/embed-twitter-feed">Help Center</a> and <a href="https://developer.twitter.com/en/docs/twitter-for-websites/timelines/overview">Developer Documentation</a> point to use <a href="https://publish.twitter.com/">Twitter Publish</a> as the official way of embedding a timeline.</p><p>As a replacement for the ability to embed search timelines, they <a href="https://twittercommunity.com/t/deprecating-widget-settings/102295">officially suggested to use the collection timeline</a>.</p><p>So what is collection timeline?</p><blockquote><p>A collection timeline displays Tweets curated by a Twitter user in their chosen display order. You can create collections using TweetDeck, or via the API.</p></blockquote><p>In other words you get to choose which tweets go in a collection. You can do this manually in TweetDeck or programmatically.</p><h2 id="TweetDeck-Collections"><a href="#TweetDeck-Collections" class="headerlink" title="TweetDeck Collections"></a>TweetDeck Collections</h2><p>A part from the main site, <a href="https://twitter.com/">Twitter</a> also has a <em>pro</em> oriented <a href="https://tweetdeck.twitter.com/">TweetDeck</a> application.</p><p>To support my solution, I created a new collection in TweetDeck. You can do this from the left menu by clicking on <code>Add column</code>, and choosing <code>Collections</code> in the modal. Give your collection a name, and it will show up as a new column in TweetDeck.</p><p>Next step is optional, but in order to try out this solution, you can click on <code>Add column</code> again, and choose <code>Search</code>. In the search field type search phrase or hashtag, you want to have in your embed timeline. For demonstration purposes I chose <code>#azure</code>. Now you will see latest tweets with that search phrase. You can manually move tweets from the search column to the collection column.</p><h2 id="Moving-tweets-to-collection-programmatically"><a href="#Moving-tweets-to-collection-programmatically" class="headerlink" title="Moving tweets to collection programmatically"></a>Moving tweets to collection programmatically</h2><p>Back in 2018 I wrote a small application based on <a href="https://coretweet.github.io/">CoreTweet</a> to do this programmatically. In my solution I used <a href="https://developer.twitter.com/en/products/twitter-api">Twitter API</a> to move tweets to collection. Source code is available at <a href="https://github.com/dalibormesaric/TwitterCollectionFeeder">github.com/dalibormesaric/TwitterCollectionFeeder</a>.</p><p>In order to use this or your own solution, you will need to apply for a <a href="https://developer.twitter.com/">Twitter Developer</a> account and choose <code>Create an app</code>.</p><p>My application has the following requirements in its <code>appsettings.json</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;consumerKey&quot;: &quot;consumerKey&quot;,</span><br><span class="line">    &quot;consumerSecret&quot;: &quot;consumerSecret&quot;,</span><br><span class="line">    &quot;accessToken&quot;: &quot;accessToken&quot;,</span><br><span class="line">    &quot;accessSecret&quot;: &quot;accessSecret&quot;,</span><br><span class="line">    &quot;searchPhrase&quot;: &quot;searchPhrase&quot;,</span><br><span class="line">    &quot;collectionName&quot;: &quot;collectionName&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>where <code>collectionName</code> is name of the collection column from the previous step, and <code>searchPhrase</code> can be your hashtag. See it in action running locally here</p><p><img src="/images/posts/2020-12-28-embed-twitter-timeline-by-search-phrase-or-hashtag/twitter-collection-feeder.gif" alt="TwitterCollectionFeeder"></p><p>Just something to keep in mind - this year Twitter <a href="https://blog.twitter.com/developer/en_us/topics/tools/2020/introducing_new_twitter_api.html">announced</a> new API v2 which is still in Early Access and will eventually replace v1.1 which is used in my solution. I’m not sure if this will introduce some new API constraints.</p><p>There are number of options available for you to run this as a background task. I used both <a href="https://docs.microsoft.com/en-us/azure/app-service/webjobs-create">Azure App Service WebJob</a> and <a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview">Azure Functions</a>, but you can use anything really.</p><h2 id="Embedding-Collection"><a href="#Embedding-Collection" class="headerlink" title="Embedding Collection"></a>Embedding Collection</h2><p>Final step is to move collection from TweetDeck back to Twitter Publish. To do this, click on your collection column settings and click on <code>Share</code> and <code>Embed Collection</code>.</p><p><img src="/images/posts/2020-12-28-embed-twitter-timeline-by-search-phrase-or-hashtag/embed-collection.gif" alt="Embed Collection"></p><p>This will take you to Twitter Publish where you can preview your collection and copy the embed code to use on your web site.</p><p><img src="/images/posts/2020-12-28-embed-twitter-timeline-by-search-phrase-or-hashtag/twitter-publish.gif" alt="Twitter Publish"></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>At the end you have a Twitter styled timeline without going through some 3rd party tool. If you are going to embed something on your site, it should come from a trusted source.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2020-12-28-embed-twitter-timeline-by-search-phrase-or-hashtag/hero.png&quot; alt=&quot;Embed Twitter timeline by search phrase or hashtag&quot;&gt;&lt;/p&gt;
&lt;p&gt;Over the years Twitter transformed quite a bit, so it is not really possible to use the official way of embedding a timeline by search phrase or hashtag. In this blog post I explain how I managed to create a workaround using collections.&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="twitter" scheme="https://developerschallenges.com/tags/twitter/"/>
    
    <category term="api" scheme="https://developerschallenges.com/tags/api/"/>
    
    <category term="webjob" scheme="https://developerschallenges.com/tags/webjob/"/>
    
    <category term="dotnet" scheme="https://developerschallenges.com/tags/dotnet/"/>
    
  </entry>
  
  <entry>
    <title>Run Go application in Azure Container Instance</title>
    <link href="https://developerschallenges.com/2020/10/25/run-go-application-in-azure-container-instance/"/>
    <id>https://developerschallenges.com/2020/10/25/run-go-application-in-azure-container-instance/</id>
    <published>2020-10-24T22:00:00.000Z</published>
    <updated>2020-10-31T15:29:18.809Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2020-10-25-run-go-application-in-azure-container-instance/hero.png" alt="Run GO application in Azure Container Instance"></p><p>I haven’t had many opportunities to use containers in my day-to-day work, so I wanted to finally try out this workflow. I also wrote a web api application in Go, so why not use it for this exercise.</p><a id="more"></a><hr><h2 id="Getting-started"><a href="#Getting-started" class="headerlink" title="Getting started"></a>Getting started</h2><p>There are some prerequisites to achieve this. You will need:</p><ul><li><a href="https://github.com/">GitHub account</a> - a place to host your code and trigger building and publishing a docker image</li><li><a href="https://hub.docker.com/">Docker Hub account</a> - a place to host your docker image</li><li><a href="https://azure.microsoft.com/en-us/free/">Azure account</a> - a place to run your application inside an Azure Container Instance</li></ul><p>I’m primarily a .NET developer, but I had a chance to try Go for a bit. <a href="https://github.com/dalibormesaric/go-key-value-api">Here is the source code</a> for my simple Key-Value API application.</p><p>Apart from having a GitHub repository to host my code, I had to <a href="https://hub.docker.com/repository/create">create a repository in Docker Hub</a> to host my container image. In my case both repositories have the same name.</p><p><img src="/images/posts/2020-10-25-run-go-application-in-azure-container-instance/docker-hub-create-repository.png" alt="Docker Hub Create Repository"></p><h2 id="Modifying-the-solution"><a href="#Modifying-the-solution" class="headerlink" title="Modifying the solution"></a>Modifying the solution</h2><p>There were two things I had to add to my solution in order to get the container hosting workflow to work. Firstly, I added Dockerfile to my project by following instruction from <a href="https://hub.docker.com/_/golang/">Golang’s official Docker Hub page</a>. This was pretty straightforward and I was able to run my application inside a docker container locally in no time.</p><p>The second thing I had to do was to create a docker image and push it to a container registry. For this I chose to use <a href="https://github.com/features/actions">GitHub Actions</a>. Initially I wanted to use recently announced  <a href="https://github.blog/2020-09-01-introducing-github-container-registry/">GitHub Container Registry</a>, but as it turns out, its public images are not really public. Azure Container Instance has issues accessing those, and until that is resolved, I will be using Docker Hub. I followed instructions from Docker’s own GitHub Action on how to <a href="https://github.com/marketplace/actions/build-and-push-docker-images">build and push docker images</a> to Docker Hub.</p><p>As a part of this process I had to create a new access token in Docker Hub, and add it to my GitHub repository as a secret, together with my Docker Hub username. This way GitHub Action is able to access information that is not meant to be public.</p><p>When creating a new access token make sure you give it a good descriptive name, so you know which repository or application it belongs to.</p><p><img src="/images/posts/2020-10-25-run-go-application-in-azure-container-instance/docker-hub-access-token.png" alt="Docker Hub Access Token"></p><p>In GitHub I gave the secrets the same name as I used in the GitHub Action yaml. </p><p><img src="/images/posts/2020-10-25-run-go-application-in-azure-container-instance/github-secrets.png" alt="GitHub Secrets"></p><p>There is also a possibility to link your GitHub account to docker hub instead of creating an access token, but I chose not to do that.</p><h2 id="Hosting-and-testing-the-application"><a href="#Hosting-and-testing-the-application" class="headerlink" title="Hosting and testing the application"></a>Hosting and testing the application</h2><p>Once my <a href="https://github.com/dalibormesaric/go-key-value-api/actions">GitHub Action successfully ran</a>, and my container image <a href="https://hub.docker.com/r/dalibormesaric/go-key-value-api">ended up in Docker Hub container registry</a> it was time to actually publish my container image to Azure Container Instance. To do this I chose to use <a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli">Azure CLI</a>, but you can do it in Azure Portal as well.</p><p>These are the two commands I used to create a new Resource Group and a new Azure Container Instance. Notice the <code>--image dalibormesaric/go-key-value-api</code> part which points to my Docker Hub repository.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">az group create --location westeurope --name rg-go-key-value-api</span><br><span class="line">az container create --resource-group rg-go-key-value-api --name aci-go-key-value-api --image dalibormesaric/go-key-value-api --cpu 1 --memory 1 --dns-name-label go-key-value-api --ports 9000</span><br></pre></td></tr></table></figure><p>Finally to test the newly deployed api I used Visual Studio Code extension called <a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client">Rest Client</a>. I just replaced localhost with the dns name I used to create the Azure Container Instance in test.http, and it worked!</p><p><img src="/images/posts/2020-10-25-run-go-application-in-azure-container-instance/rest-client.gif" alt="Rest Client"></p><p>As a final note, make sure to stop or delete your unused Azure resources to avoid unwanted costs.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Overall, the experience is pretty smooth, except for the unfortunate setback in trying to use GitHub Container Registry. Through Azure CLI I’m able to bring up instances of my applications on-demand and extend my workflows by taking advantage of cloud compute.</p><hr><p><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/">ScreenToGif</a></em></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2020-10-25-run-go-application-in-azure-container-instance/hero.png&quot; alt=&quot;Run GO application in Azure Container Instance&quot;&gt;&lt;/p&gt;
&lt;p&gt;I haven’t had many opportunities to use containers in my day-to-day work, so I wanted to finally try out this workflow. I also wrote a web api application in Go, so why not use it for this exercise.&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="golang" scheme="https://developerschallenges.com/tags/golang/"/>
    
    <category term="docker" scheme="https://developerschallenges.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>The best way to send files from iPhone to Windows PC over local network</title>
    <link href="https://developerschallenges.com/2020/08/23/the-best-way-to-send-files-from-iphone-to-windows-pc-over-local-network/"/>
    <id>https://developerschallenges.com/2020/08/23/the-best-way-to-send-files-from-iphone-to-windows-pc-over-local-network/</id>
    <published>2020-08-22T22:00:00.000Z</published>
    <updated>2020-10-31T15:22:13.976Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2020-08-23-the-best-way-to-send-files-from-iphone-to-windows-pc-over-local-network/hero.png" alt="The best way to send files from iPhone to Windows PC over local network"></p><p>It’s no secret that Apple products don’t play well with operating systems made by other companies. Thankfully iOS 13 brought a nice way of natively sending files from iPhone to a Windows PC over LAN.</p><a id="more"></a><hr><p>Sometimes I use a Mac, but most of my time I’m on a Windows machine. Whenever I wanted to send a photo or whatever else from my iPhone to my Windows PC, I got super annoyed about the current state of things. Is this really the future where, if not connected to the interenet, I can’t send a photo from one device to the other? I really don’t want to use Dropbox or OneDrive for this.</p><p>Luckily things got a little bit better with the iOS 13 update. Now with a quick setup you can send files from iPhone to PC over your local network.</p><h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p>It is pretty straight forward to set this up on both your PC and your iOS device. <a href="https://support.microsoft.com/en-us/help/4092694/windows-10-file-sharing-over-a-network">Here</a> is what your need to do on your PC. For iOS setup check the article <a href="https://support.apple.com/en-us/HT206481#ipad">here</a>, with additional information <a href="https://support.apple.com/guide/ipod-touch/connect-external-devices-or-servers-iph8d8f0f1a0/ios">here</a>.</p><p>On the phone you can enter the IP address of your Windows PC, and it will connect over SMB protocol. You might need to enter the username and password of your Windows user.</p><p><img src="/images/posts/2020-08-23-the-best-way-to-send-files-from-iphone-to-windows-pc-over-local-network/windows.png" alt="Share folder on Windows"></p><h2 id="Bonus"><a href="#Bonus" class="headerlink" title="Bonus"></a>Bonus</h2><p>Since I have <a href="/2017/11/30/stop-looking-at-ads-with-pi-hole/">pi-hole</a> on my local network, I also get to have a DNS server. So, I use domain names in my local network and the experience is even nicer. <a href="https://discourse.pi-hole.net/t/howto-using-pi-hole-as-lan-dns-server/533">Here</a> is how to set that up.</p><p><img src="/images/posts/2020-08-23-the-best-way-to-send-files-from-iphone-to-windows-pc-over-local-network/ios.png" alt="Share folder on iOS"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2020-08-23-the-best-way-to-send-files-from-iphone-to-windows-pc-over-local-network/hero.png&quot; alt=&quot;The best way to send files from iPhone to Windows PC over local network&quot;&gt;&lt;/p&gt;
&lt;p&gt;It’s no secret that Apple products don’t play well with operating systems made by other companies. Thankfully iOS 13 brought a nice way of natively sending files from iPhone to a Windows PC over LAN.&lt;/p&gt;</summary>
    
    
    
    
    <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
    <category term="ios" scheme="https://developerschallenges.com/tags/ios/"/>
    
    <category term="networking" scheme="https://developerschallenges.com/tags/networking/"/>
    
  </entry>
  
  <entry>
    <title>Re-discover your inner programmer with F# in three steps</title>
    <link href="https://developerschallenges.com/2020/07/27/re-discover-your-inner-programmer-with-f-in-three-steps/"/>
    <id>https://developerschallenges.com/2020/07/27/re-discover-your-inner-programmer-with-f-in-three-steps/</id>
    <published>2020-07-26T22:00:00.000Z</published>
    <updated>2020-07-29T22:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2020-07-27-re-discover-your-inner-programmer-with-f-in-three-steps/hero.png" alt="Re-discover your inner programmer with F# in 3 steps"></p><p>I was introduced to F# some time before, but I finally decided to try it out on my own. Here is what got me motivated to do so!</p><a id="more"></a><hr><h2 id="Zeroth-step"><a href="#Zeroth-step" class="headerlink" title="Zeroth step"></a>Zeroth step</h2><p>Ok, so there is one more step then I promised, a pre-step. But this one is optional since you can’t influence it. It involves having an F# evangelist in your company or group of friends. Luckily we have <a href="https://twitter.com/Emmet_Ray">@Emmet_Ray</a>, and a companywide introduction to F# happened a while back. On a few occasions we had external speakers doing workshops on this topic, or internal presentations held by the man himself. As I said this is an optional step, but that influencer in your group could be you!</p><h2 id="First-step"><a href="#First-step" class="headerlink" title="First step"></a>First step</h2><p>A very calm introduction to F# by <a href="https://twitter.com/isaac_abraham">@isaac_abraham</a> designed not to scare you away, but rather to introduce you to some basic concepts and give you a warm welcome. Definitely worth a watch!</p><iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/UXeFR5RQnjs" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="Second-step"><a href="#Second-step" class="headerlink" title="Second step"></a>Second step</h2><p>A super convenient and easy way to get familiar with F# concepts and syntax is through the <a href="https://github.com/ChrisMarinos/FSharpKoans">FSharpKoans project</a>. My friend <a href="https://twitter.com/pootzko">@pootzko</a> recommended this, and we solved it in parallel. He also <a href="https://tkit.dev/2020/07/14/fsharp-koans-the-stock-example/">wrote about his experience</a>, and I managed to <a href="https://github.com/ChrisMarinos/FSharpKoans/pull/97">make a small Pull Request</a> to the project.</p><h2 id="Third-step"><a href="#Third-step" class="headerlink" title="Third step"></a>Third step</h2><p>I printed out a <a href="https://dungpa.github.io/fsharp-cheatsheet/">F# Cheatsheet</a> that is now on my desk and acts both as help but also as a reminder to play with this even more. Great web site with a tone of resources is <a href="https://fsharpforfunandprofit.com/">F# for fun and profit</a>, and this will be open in my browser for a while.</p><p>Finally, it is important that you start a project. Any project. I wanted to explore making a cli tool and I found <a href="http://fsprojects.github.io/Argu/">Argu</a>. This is where I’m at, and I look forward to using more F# in my hobby projects. Who knows, maybe one day I’ll get a chance to use it professionally as well!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2020-07-27-re-discover-your-inner-programmer-with-f-in-three-steps/hero.png&quot; alt=&quot;Re-discover your inner programmer with F# in 3 steps&quot;&gt;&lt;/p&gt;
&lt;p&gt;I was introduced to F# some time before, but I finally decided to try it out on my own. Here is what got me motivated to do so!&lt;/p&gt;</summary>
    
    
    
    
    <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
    <category term="fsharp" scheme="https://developerschallenges.com/tags/fsharp/"/>
    
    <category term="programming" scheme="https://developerschallenges.com/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title>Adding Application Insights to my blog - one week aftermath</title>
    <link href="https://developerschallenges.com/2020/02/16/adding-application-insights-to-my-blog-one-week-aftermath/"/>
    <id>https://developerschallenges.com/2020/02/16/adding-application-insights-to-my-blog-one-week-aftermath/</id>
    <published>2020-02-15T23:00:00.000Z</published>
    <updated>2020-10-31T15:22:17.919Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2020-02-16-adding-application-insights-to-my-blog-one-week-aftermath/hero.png" alt="Adding Application Insights to my blog - one week aftermath"></p><p>Last week I added Application Insights to my blog. Here are some initial thoughts after exploring a bit what information various sections in Azure portal provide.</p><a id="more"></a><hr><p>Since I decided to share my last weeks <a href="/2020/02/09/get-your-most-visited-pages-in-a-serverless-way/">post</a> on more channels, I was hoping to bring more visitors. I spent some time analyzing the captured insights available in the Azure portal. Important note is that this captures only data from the visitors without adblockers.</p><p>Since logging on the static web sites happens only on the client side, not all sections in Azure provide information, but here is by section breakdown of what I found interesting.</p><h2 id="Monitoring-gt-Logs-Query-explorer"><a href="#Monitoring-gt-Logs-Query-explorer" class="headerlink" title="Monitoring &gt; Logs - Query explorer"></a>Monitoring &gt; Logs - Query explorer</h2><p>This is a familiar section already mentioned in previous post, but I wanted to point out <code>Query explorer</code> - where I saved my KQL query. You can also share your own queries with your team members from there. </p><p><img src="/images/posts/2020-02-16-adding-application-insights-to-my-blog-one-week-aftermath/query_explorer.png" alt="query explorer"></p><h2 id="Usage-gt-Users"><a href="#Usage-gt-Users" class="headerlink" title="Usage &gt; Users"></a>Usage &gt; Users</h2><p>In this section we can see more interesting data. I published the and shared the post around Sunday noon (CET), but the biggest impact was on Monday. By the end of the week the interest was naturally fading.</p><p><img src="/images/posts/2020-02-16-adding-application-insights-to-my-blog-one-week-aftermath/users_per_day.png" alt="users per day"></p><p>Second part of this section breaks down users by country, operating system and browser. It is really interesting to see where your readers are coming from, but I must admit, I was hoping for a bit more support from my Croatian audience.</p><p><img src="/images/posts/2020-02-16-adding-application-insights-to-my-blog-one-week-aftermath/users_other.png" alt="users other"></p><h2 id="Usage-gt-User-Flows"><a href="#Usage-gt-User-Flows" class="headerlink" title="Usage &gt; User Flows"></a>Usage &gt; User Flows</h2><p>This section requires a question to be set, so I chose my previous post page.</p><p><strong>What happens before and after <code>Get your most visited pages in a serverless way | Developer&#39;s Challenges</code> ?</strong></p><p>Here I could see to which page the visitors went to. Majority just ended their session, but some went to my <a href="/about/">About page</a> before ending the session. I will experiment a bit and try to add more content and links to that page to keep the visitors engaged.</p><p><img src="/images/posts/2020-02-16-adding-application-insights-to-my-blog-one-week-aftermath/user_flows.png" alt="user flows"></p><h2 id="Configure-gt-Usage-and-estimated-costs"><a href="#Configure-gt-Usage-and-estimated-costs" class="headerlink" title="Configure &gt; Usage and estimated costs"></a>Configure &gt; Usage and estimated costs</h2><p>Here are shown the estimated costs for using Application Insights. After one week it still says 0.00 USD, so I will see if this continues until the end of the month. On the <a href="https://azure.microsoft.com/en-us/pricing/details/monitor/">Azure Monitor pricing page</a> it says that up to 5 GB it is free, which I don’t think I will reach.</p><h2 id="Configure-gt-Continous-export"><a href="#Configure-gt-Continous-export" class="headerlink" title="Configure &gt; Continous export"></a>Configure &gt; Continous export</h2><p>This is an interesting section that I plan to use in the future. Ability to <a href="https://docs.microsoft.com/en-us/azure/azure-monitor/app/export-telemetry">export telemetry</a> preserves the value of the logs. This will add some cost because of the usage of storage account, but it should be worth it.</p><h2 id="Investigate-gt-Availability"><a href="#Investigate-gt-Availability" class="headerlink" title="Investigate &gt; Availability"></a>Investigate &gt; Availability</h2><p>Finally, this section checks the availability of the web site. <a href="https://azure.microsoft.com/en-us/pricing/details/monitor/">Ping web test</a> are free, but adding any alerts will have effect on the total cost. Interestingly, the lowest latency comes from the East US region.</p><p><img src="/images/posts/2020-02-16-adding-application-insights-to-my-blog-one-week-aftermath/availability.png" alt="availability"></p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2020-02-16-adding-application-insights-to-my-blog-one-week-aftermath/hero.png&quot; alt=&quot;Adding Application Insights to my blog - one week aftermath&quot;&gt;&lt;/p&gt;
&lt;p&gt;Last week I added Application Insights to my blog. Here are some initial thoughts after exploring a bit what information various sections in Azure portal provide.&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="jamstack" scheme="https://developerschallenges.com/tags/jamstack/"/>
    
    <category term="application insights" scheme="https://developerschallenges.com/tags/application-insights/"/>
    
  </entry>
  
  <entry>
    <title>Get your most visited pages in a serverless way</title>
    <link href="https://developerschallenges.com/2020/02/09/get-your-most-visited-pages-in-a-serverless-way/"/>
    <id>https://developerschallenges.com/2020/02/09/get-your-most-visited-pages-in-a-serverless-way/</id>
    <published>2020-02-08T23:00:00.000Z</published>
    <updated>2020-10-31T15:22:19.250Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/posts/2020-02-09-get-your-most-visited-pages-in-a-serverless-way/hero.png" alt="Get your most visited pages in a serverless way"></p><p>I was asked what would be a good way to track top read articles for a clients web site. The web site is build using Episerver CMS, so should we save page visits in the database? Or is there a more modern solution?</p><a id="more"></a><hr><p>I knew we already have Application Insights monitoring in place, so we know what are the top visited articles. We just needed to extract that information and put it into code we could use to build such a widget.</p><p>This gave me an idea and I wanted to try it out in my own blog.</p><h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p>I set up Application Insights in Azure according to <a href="https://docs.microsoft.com/en-us/azure/azure-monitor/app/website-monitoring">this documentation</a>. I modified my <a href="https://github.com/ppoffice/hexo-theme-hueman">hexo theme</a> and included the Application Insights script.</p><p>The documentation also explains how to use <a href="https://docs.microsoft.com/en-us/azure/kusto/query/">Kusto Query Language</a> to extract data from the logs.</p><p>Application Insights is tracking page views, so here is the KQL query I used to get page views for my blog posts. Since all of the blog posts start with <code>/YYYY/MM/DD/</code>, I used regex to fetch only those pages. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pageViews</span><br><span class="line">| where timestamp &gt; ago(7d)</span><br><span class="line">| where operation_Name matches regex @&quot;^(\&#x2F;)\d&#123;4&#125;(\&#x2F;)\d&#123;2&#125;(\&#x2F;)\d&#123;2&#125;.*$&quot;</span><br><span class="line">| summarize visits &#x3D; sum(itemCount) by url </span><br><span class="line">| top 10 by visits desc </span><br></pre></td></tr></table></figure><p><img src="/images/posts/2020-02-09-get-your-most-visited-pages-in-a-serverless-way/logs.png" alt="logs"></p><p>Next step was to get that data through the Application Insights API. I followed the instructions <a href="https://dev.applicationinsights.io/quickstart">documented here</a> to get an API key, and I used PowerShell to get the initial data from the API.</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$appid</span> = <span class="string">&quot;Application ID here...&quot;</span></span><br><span class="line"><span class="variable">$apikey</span> = <span class="string">&quot;API key here...&quot;</span></span><br><span class="line"><span class="variable">$response</span> = <span class="built_in">Invoke-WebRequest</span> <span class="string">&quot;https://api.applicationinsights.io/v1/apps/<span class="variable">$appid</span>/query?query=pageViews | where timestamp &gt; ago(7d) | where operation_Name matches regex @&#x27;^(\/)\d&#123;4&#125;(\/)\d&#123;2&#125;(\/)\d&#123;2&#125;.*<span class="variable">$</span>&#x27; | summarize visits = sum(itemCount) by url | top 10 by visits desc&quot;</span> <span class="literal">-Headers</span> <span class="selector-tag">@</span>&#123;<span class="string">&quot;X-Api-Key&quot;</span>=<span class="string">&quot;<span class="variable">$apikey</span>&quot;</span>&#125; <span class="literal">-UseBasicParsing</span></span><br><span class="line"><span class="variable">$response</span>.Content</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2020-02-09-get-your-most-visited-pages-in-a-serverless-way/content.png" alt="content"></p><p>Now that I got a JSON response, I used it to generate C# class using <a href="http://json2csharp.com/">this online tool</a>.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Column</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> type &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Table</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Column&gt; columns &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;<span class="keyword">object</span>&gt;&gt; rows &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RootObject</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Table&gt; tables &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Finally I combined all from the above into a simple Console Application.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> URL = <span class="string">&quot;https://api.applicationinsights.io/v1/apps/&#123;0&#125;/&#123;1&#125;?&#123;2&#125;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> appid = <span class="string">&quot;Application ID here...&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> apikey = <span class="string">&quot;API key here...&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        HttpClient client = <span class="keyword">new</span> HttpClient();</span><br><span class="line">        client.DefaultRequestHeaders.Accept.Add(<span class="keyword">new</span> MediaTypeWithQualityHeaderValue(<span class="string">&quot;application/json&quot;</span>));</span><br><span class="line">        client.DefaultRequestHeaders.Add(<span class="string">&quot;x-api-key&quot;</span>, apikey);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">string</span>.Format(URL, appid, <span class="string">&quot;query&quot;</span>, <span class="string">&quot;query=pageViews | where timestamp &gt; ago(7d) | where operation_Name matches regex @&#x27;^(\\/)\\d&#123;4&#125;(\\/)\\d&#123;2&#125;(\\/)\\d&#123;2&#125;.*$&#x27; | summarize visits = sum(itemCount) by url | top 10 by visits desc&quot;</span>);</span><br><span class="line">        HttpResponseMessage response = <span class="keyword">await</span> client.GetAsync(request);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> rootObject = <span class="keyword">await</span> response.Content.ReadAsAsync&lt;RootObject&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        rootObject.tables.Single().rows.ForEach(row =&gt; Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;++i&#125;</span>. URL: <span class="subst">&#123;row[<span class="number">0</span>]&#125;</span>, Visits: <span class="subst">&#123;row[<span class="number">1</span>]&#125;</span>&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/posts/2020-02-09-get-your-most-visited-pages-in-a-serverless-way/console.png" alt="console"></p><h2 id="Next-steps"><a href="#Next-steps" class="headerlink" title="Next steps"></a>Next steps</h2><p>I have some ideas where to go next. I would put my code in an Azure Function, so that it can be maintained separately from the main application and accessed on demand.</p><p>For Episerver implementation I would suggest using a Scheduled Job to call the Azure Function and update the Most Visited Articles widget.</p><p>As far as my blog is conserned, here are some possible solutions:</p><ul><li>Call the API on each page load to show the most fresh data</li><li>Integrate the API call on each deploy, and generate a static widget</li><li>Set up a scheduled deployments that would update this widget regularly</li></ul><p>Honestly this blog doesn’t have a lot of views, so maybe it is not worth the effort, but it would be a fun exercise. As an experiment I will share this blog post on my newly created <a href="https://dev.to/dalibormesaric">dev.to</a> page and my <a href="https://linkedin.com/in/dalibormesaric">LinkedIn</a> for the first time, along side my usuall <a href="https://twitter.com/dalibormesaric">Twitter</a> shares. Let’s see if the networking effect works :)</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/posts/2020-02-09-get-your-most-visited-pages-in-a-serverless-way/hero.png&quot; alt=&quot;Get your most visited pages in a serverless way&quot;&gt;&lt;/p&gt;
&lt;p&gt;I was asked what would be a good way to track top read articles for a clients web site. The web site is build using Episerver CMS, so should we save page visits in the database? Or is there a more modern solution?&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
    <category term="serverless" scheme="https://developerschallenges.com/tags/serverless/"/>
    
    <category term="jamstack" scheme="https://developerschallenges.com/tags/jamstack/"/>
    
    <category term="application insights" scheme="https://developerschallenges.com/tags/application-insights/"/>
    
  </entry>
  
  <entry>
    <title>Simple file versioning with Blob Storage and Azure Functions</title>
    <link href="https://developerschallenges.com/2020/01/31/simple-file-versioning-with-blob-storage-and-azure-functions/"/>
    <id>https://developerschallenges.com/2020/01/31/simple-file-versioning-with-blob-storage-and-azure-functions/</id>
    <published>2020-01-30T23:00:00.000Z</published>
    <updated>2020-10-31T15:22:20.800Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2020-01-31-simple-file-versioning-with-blob-storage-and-azure-functions/hero.png"><p>A colleague asked if there is a file versioning functionality in Azure Blob Storage. This would be something like File History in Windows, so no, but I suggested a more Cloud Native approach - Azure Functions.</p><a id="more"></a><hr><p>For this demo I created a new Function App in Azure portal. I filled out the first step of the wizard, and left everything else by default. By doing that I also created all other resources required for this demo, including a new resource group.</p><img src="/images/posts/2020-01-31-simple-file-versioning-with-blob-storage-and-azure-functions/function_app.png"><p>Once the Function App was created, I added a new Function by going through the wizard shown below :</p><img src="/images/posts/2020-01-31-simple-file-versioning-with-blob-storage-and-azure-functions/new_function.gif"><p>Here is the script I pasted in the Function :</p><script src="https://gist.github.com/dalibormesaric/57895b16b98f421c5e7021dd78b1a721.js"></script><p>To test if everything is working, open <a href="https://azure.microsoft.com/en-us/features/storage-explorer/">Storage Explorer</a> and find Storage Account that was created in your Resource Group while creating a new Function App. Under Blob Containers, create a new Container named <code>samples-workitems</code>. Adding any file to that Container will trigger the Azure Function, and you will start seeing <em>versions</em> of your file created.</p><img src="/images/posts/2020-01-31-simple-file-versioning-with-blob-storage-and-azure-functions/file_versioning.gif"><p>This is just a simple demonstration of Blob Storage triggering an Azure Function, and of course the code is not really production ready.</p><p>Some things I would improve :</p><ul><li>Function is triggered twice (second time after the duplicate file is created)</li><li>Content Type of the duplicate file is not the same as original</li><li>Not tested with large files</li></ul><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em><br><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/">ScreenToGif</a></em></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2020-01-31-simple-file-versioning-with-blob-storage-and-azure-functions/hero.png&quot;&gt;

&lt;p&gt;A colleague asked if there is a file versioning functionality in Azure Blob Storage. This would be something like File History in Windows, so no, but I suggested a more Cloud Native approach - Azure Functions.&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="storage" scheme="https://developerschallenges.com/tags/storage/"/>
    
    <category term="functions" scheme="https://developerschallenges.com/tags/functions/"/>
    
    <category term="serverless" scheme="https://developerschallenges.com/tags/serverless/"/>
    
  </entry>
  
  <entry>
    <title>How to combine Custom / Async Availity reactstrap Validation with onChange attribute saving value to a useState Hook?</title>
    <link href="https://developerschallenges.com/2020/01/25/how-to-combine-custom-async-availity-reactstrap-validation-with-onchange-attribute-saving-value-to-a-usestate-hook/"/>
    <id>https://developerschallenges.com/2020/01/25/how-to-combine-custom-async-availity-reactstrap-validation-with-onchange-attribute-saving-value-to-a-usestate-hook/</id>
    <published>2020-01-24T23:00:00.000Z</published>
    <updated>2020-10-31T15:22:23.257Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2020-01-25-how-to-combine-custom-async-availity-reactstrap-validation-with-onchange-attribute-saving-value-to-a-usestate-hook/hero.png"><p>If you choose to save all form inputs with <code>useState</code> Hooks while using async validation, you will face this issue. Here is how to avoid multiple api calls and weird validation behaviors.</p><a id="more"></a><hr><h2 id="1-Setup"><a href="#1-Setup" class="headerlink" title="1. Setup"></a>1. Setup</h2><p><a href="https://github.com/dalibormesaric/test-react-validation">Here</a> is the repository containing the solution, but I described the required setup steps in this article as well.</p><p>I re-created the issue we faced at work by generating both frontend and backend from template generators. For the frontend I used <a href="https://create-react-app.dev/">Create React App</a> with typescript and for the backend I used <a href="https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio-code">ASP.NET Core webapi template</a>.</p><p>Backend is not really important here, but we use this stack so it was easier to reason about how everything works.</p><p>For a quick setup, just create an empty folder and run the following commands</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app test-react-validation --template typescript</span><br><span class="line">dotnet new webapi -n test-react-validation-backend</span><br><span class="line"></span><br><span class="line">cd test-react-validation</span><br><span class="line"></span><br><span class="line">npm install --save reactstrap react react-dom</span><br><span class="line">npm install --save @types/reactstrap</span><br><span class="line">npm install --save availity-reactstrap-validation react react-dom</span><br><span class="line">npm install --save lodash</span><br><span class="line">npm install --save @types/lodash</span><br></pre></td></tr></table></figure><h3 id="Frontend-setup"><a href="#Frontend-setup" class="headerlink" title="Frontend setup"></a>Frontend setup</h3><p>Since <a href="https://availity.github.io/availity-reactstrap-validation/">Availity reactstrap Validation</a> doesn’t have types npm package, I had to modify <code>react-app-env.d.ts</code> with</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">module</span> &quot;availity-reactstrap-validation&quot;;</span><br></pre></td></tr></table></figure><p>I created new file for the component as <code>src/MyForm/MyForm.tsx</code> with the following code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; FC, useState &#125; from &quot;react&quot;;</span><br><span class="line">import &#123; AvForm, AvField &#125; from &#39;availity-reactstrap-validation&#39;;</span><br><span class="line">import &#123; Button &#125; from &quot;reactstrap&quot;;</span><br><span class="line">import debounce from &quot;lodash&#x2F;debounce&quot;;</span><br><span class="line"></span><br><span class="line">interface IWeatherForecast &#123;</span><br><span class="line">    summary: string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export const MyForm: FC &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    const [name, setName] &#x3D; useState&lt;string&gt;(&quot;&quot;);</span><br><span class="line">    const [weatherSummary, setWeatherSummary] &#x3D; useState&lt;string&gt;(&quot;&quot;);</span><br><span class="line"></span><br><span class="line">    return (</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;AvForm&gt;</span><br><span class="line">                &lt;AvField name&#x3D;&quot;name&quot; label&#x3D;&quot;Name&quot; required onChange&#x3D;&#123;(e: React.ChangeEvent&lt;HTMLInputElement&gt;) &#x3D;&gt; &#123; setName(e.target.value) &#125;&#125; &#x2F;&gt;</span><br><span class="line">                &lt;AvField name&#x3D;&quot;async&quot; label&#x3D;&quot;Async Validation (enter &#39;Warm&#39;)&quot; type&#x3D;&quot;text&quot; validate&#x3D;&#123;&#123;async: validate&#125;&#125; onChange&#x3D;&#123;(e: React.ChangeEvent&lt;HTMLInputElement&gt;) &#x3D;&gt; &#123; setWeatherSummary(e.target.value) &#125;&#125; &#x2F;&gt;</span><br><span class="line">                &lt;Button color&#x3D;&quot;primary&quot;&gt;Submit&lt;&#x2F;Button&gt;</span><br><span class="line">            &lt;&#x2F;AvForm&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And I changed <code>App.tsx</code> to contain only the <code>MyForm</code> component</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import React from &#39;react&#39;;</span><br><span class="line">import logo from &#39;.&#x2F;logo.svg&#39;;</span><br><span class="line">import &#39;.&#x2F;App.css&#39;;</span><br><span class="line">import &#123; MyForm &#125; from &#39;.&#x2F;MyForm&#x2F;MyForm&#39;;</span><br><span class="line"></span><br><span class="line">const App: React.FC &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;MyForm &#x2F;&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default App;</span><br></pre></td></tr></table></figure><p>Of course, the code will not compile at this point because the implementation of the <code>validate</code> method is missing.</p><p>To start the frontend project, in the project root use the command</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><h3 id="Backend-setup"><a href="#Backend-setup" class="headerlink" title="Backend setup"></a>Backend setup</h3><p>Backend app required some modifications to enable CORS based on the following <a href="https://stackoverflow.com/questions/57604682/how-to-how-to-fix-no-access-control-allow-origin-header-is-present-on-the-req/57604855#57604855">Stack Overflow answer</a>.</p><p>In <code>Startup.cs</code> you need to add the following to <code>ConfigurationServices</code> method</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">services.AddCors(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.AddDefaultPolicy(builder =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        builder.AllowAnyOrigin()</span><br><span class="line">        .AllowAnyMethod()</span><br><span class="line">        .AllowAnyHeader();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>and the following to <code>Configure</code> method</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.UseCors();</span><br></pre></td></tr></table></figure><p>And finally I changed <code>WeatherForecastController.cs</code> on line <code>34</code> to disable randomization, from</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Summary = Summaries[rng.Next(Summaries.Length)]</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Summary = Summaries[index]</span><br></pre></td></tr></table></figure><p>To start the backend project, in the project root use the command</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet run</span><br></pre></td></tr></table></figure><h2 id="2-The-issue"><a href="#2-The-issue" class="headerlink" title="2. The issue"></a>2. The issue</h2><p>When I applied the solution suggested by <a href="https://availity.github.io/availity-reactstrap-validation/components/validators/">Availity docs under Custom / Async</a></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> validateTimeout: <span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> validate = debounce(<span class="function">(<span class="params">value: <span class="built_in">string</span>, ctx: <span class="built_in">any</span>, input: <span class="built_in">any</span>, cb: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> validateAsync = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> fetch(<span class="string">&quot;https://localhost:5001/WeatherForecast/&quot;</span>);</span><br><span class="line">        <span class="keyword">const</span> resultJson = <span class="keyword">await</span> result.json() <span class="keyword">as</span> IWeatherForecast[];</span><br><span class="line">        cb(resultJson.some(<span class="function"><span class="params">r</span> =&gt;</span> r.summary === value));</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">window</span>.clearTimeout(validateTimeout);</span><br><span class="line">    validateTimeout = <span class="built_in">window</span>.setTimeout(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        validateAsync();</span><br><span class="line">    &#125;, <span class="number">500</span>);</span><br><span class="line">&#125;, <span class="number">300</span>);</span><br></pre></td></tr></table></figure><p>I got the following behavior</p><img src="/images/posts/2020-01-25-how-to-combine-custom-async-availity-reactstrap-validation-with-onchange-attribute-saving-value-to-a-usestate-hook/the_issue.gif"><p>As you can see, there are several issues here:</p><ul><li>Validation was triggered on form load</li><li>On each key press validation was triggered more then once</li><li>Validation was triggered by entering value in a different field</li><li>Validation was triggered by clicking the Submit button even if the value wasn’t changed</li></ul><p>I was typing fast in order to take advantage <code>debounce</code>. In this example, the api was called 8 times.</p><p>What is really happening here is that by calling onChange method, re-render of the whole component is triggered which also triggers the validation again.</p><h2 id="3-The-fix"><a href="#3-The-fix" class="headerlink" title="3. The fix"></a>3. The fix</h2><p>A colleague suggested to use the <a href="https://reactjs.org/docs/hooks-reference.html#useref"><code>useRef</code> Hook</a> and I used it to decorate the <code>validate</code> method.  It stores the mutable value and doesn’t cause a re-render.</p><p>I also removed <code>setTimeout</code> because it was not needed.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> validate = useRef(</span><br><span class="line">    debounce(<span class="function">(<span class="params">value: <span class="built_in">string</span>, ctx: <span class="built_in">any</span>, input: <span class="built_in">any</span>, cb: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> validateAsync = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> fetch(<span class="string">&quot;https://localhost:5001/WeatherForecast/&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> resultJson = <span class="keyword">await</span> result.json() <span class="keyword">as</span> IWeatherForecast[];</span><br><span class="line">            cb(resultJson.some(<span class="function"><span class="params">r</span> =&gt;</span> r.summary === value));</span><br><span class="line">        &#125;;</span><br><span class="line">        validateAsync();</span><br><span class="line">    &#125;, <span class="number">300</span>)</span><br><span class="line">).current;</span><br></pre></td></tr></table></figure><p>Good progress! We are down to 4 api calls and <code>onChange</code> calls no longer trigger <code>validate</code> method!</p><p>What we want now is to track validation value so we don’t call the api more then once for the same value. We also don’t want to validate on the component load.</p><p>I used <code>useRef</code> Hook again to keep track of the value returned from the api and whether or not that resulted in a successfull validation.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> validatedWeatherSummary = useRef(&#123; value: <span class="literal">undefined</span> <span class="keyword">as</span> <span class="built_in">string</span> | <span class="literal">undefined</span>, valid: <span class="literal">false</span> &#125;).current;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> validate = useRef(</span><br><span class="line">    debounce(<span class="function">(<span class="params">value: <span class="built_in">string</span>, ctx: <span class="built_in">any</span>, input: <span class="built_in">any</span>, cb: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> validateAsync = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> fetch(<span class="string">&quot;https://localhost:5001/WeatherForecast/&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> resultJson = <span class="keyword">await</span> result.json() <span class="keyword">as</span> IWeatherForecast[];</span><br><span class="line">            validatedWeatherSummary.valid = resultJson.some(<span class="function"><span class="params">r</span> =&gt;</span> r.summary === value);</span><br><span class="line">            validatedWeatherSummary.value = value;</span><br><span class="line">            cb(validatedWeatherSummary.valid);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            (validatedWeatherSummary.value !== <span class="literal">undefined</span> &amp;&amp; validatedWeatherSummary.value !== value) <span class="comment">// Validate if different value</span></span><br><span class="line">            || (value !== <span class="string">&quot;&quot;</span> &amp;&amp; validatedWeatherSummary.value === <span class="literal">undefined</span>) <span class="comment">// Initial validation on first value change</span></span><br><span class="line">        ) &#123;</span><br><span class="line">            validateAsync();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cb(validatedWeatherSummary.valid);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">300</span>)</span><br><span class="line">).current;</span><br></pre></td></tr></table></figure><p>The result can be seen here</p><img src="/images/posts/2020-01-25-how-to-combine-custom-async-availity-reactstrap-validation-with-onchange-attribute-saving-value-to-a-usestate-hook/the_fix.gif"><p>Finally, only one api call! Since React Hooks are still pretty new, I hope that someone will find this usefull.</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em><br><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/">ScreenToGif</a></em></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2020-01-25-how-to-combine-custom-async-availity-reactstrap-validation-with-onchange-attribute-saving-value-to-a-usestate-hook/hero.png&quot;&gt;

&lt;p&gt;If you choose to save all form inputs with &lt;code&gt;useState&lt;/code&gt; Hooks while using async validation, you will face this issue. Here is how to avoid multiple api calls and weird validation behaviors.&lt;/p&gt;</summary>
    
    
    
    
    <category term="react" scheme="https://developerschallenges.com/tags/react/"/>
    
    <category term="hooks" scheme="https://developerschallenges.com/tags/hooks/"/>
    
    <category term="validation" scheme="https://developerschallenges.com/tags/validation/"/>
    
  </entry>
  
  <entry>
    <title>How to edit and customize HTML5 UP template in a simple way?</title>
    <link href="https://developerschallenges.com/2020/01/17/how-to-edit-and-customize-html5-up-template-in-a-simple-way/"/>
    <id>https://developerschallenges.com/2020/01/17/how-to-edit-and-customize-html5-up-template-in-a-simple-way/</id>
    <published>2020-01-16T23:00:00.000Z</published>
    <updated>2020-10-31T15:14:16.379Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2020-01-17-how-to-edit-and-customize-html5-up-template-in-a-simple-way/hero.png"><p>I wanted to quickly get up and running with one of the free pre-made web site templates. HTML5 UP is a collection of amazing free templates, but I also wanted to customize styling a bit. Here is how to achieve that.</p><a id="more"></a><hr><p>To get started, visit <a href="https://html5up.net/">HTMP5 UP</a> and download one of the templates. I chose the one called <a href="https://html5up.net/identity">Identity</a>. Once it is downloaded, extract it in a folder. Open the newly created folder with Visual Studio Code.</p><p>The issue was that styling for those templates is done using Sass, but there is no tooling included with the downloaded files to generate the css files.</p><p>I installed the <a href="https://ritwickdey.github.io/vscode-live-sass-compiler/">Live Sass Compiler</a> extension in order to get the Sass compilation working without having to configure any command line tooling.</p><p>Live Sass Compiler requires some configuration in <a href="https://code.visualstudio.com/docs/getstarted/settings">Visual Studio Code settings</a>. You want to modify your workspace settings that will live together with the project in <code>.vscode/settings.json</code>. I added the following in my settings</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;liveSassCompile.settings.formats&quot;:[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">&quot;format&quot;</span>: <span class="string">&quot;expanded&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;extensionName&quot;</span>: <span class="string">&quot;.css&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;savePath&quot;</span>: <span class="string">&quot;~/../css&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">],</span><br><span class="line">&quot;liveSassCompile.settings.generateMap&quot;: false,</span><br><span class="line">&quot;liveSassCompile.settings.autoprefix&quot;: [</span><br><span class="line">    &quot;&gt; 1%&quot;,</span><br><span class="line">    <span class="string">&quot;last 2 versions&quot;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>As a final change to fix the compilation error, I had to line <code>6</code> in <code>main.scss</code> from</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &#39;fontawesome-all.min.css&#39;;</span><br></pre></td></tr></table></figure><p>to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import url(&#39;fontawesome-all.min.css&#39;);</span><br></pre></td></tr></table></figure><p>As a bonus for using Live Sass Compiler, you get a Live Reload extension as well. At the bottom of Visual Studio Code, in the Status Bar, you will see two buttons. <code>Watch Sass</code> will trigger css generation after you save any Sass files, and <code>Go Live</code> will start a web server for your page.</p><img src="/images/posts/2020-01-17-how-to-edit-and-customize-html5-up-template-in-a-simple-way/extension_buttons.png"><p>Now you are able to modify the Sass files and see the changes immediately!</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2020-01-17-how-to-edit-and-customize-html5-up-template-in-a-simple-way/hero.png&quot;&gt;

&lt;p&gt;I wanted to quickly get up and running with one of the free pre-made web site templates. HTML5 UP is a collection of amazing free templates, but I also wanted to customize styling a bit. Here is how to achieve that.&lt;/p&gt;</summary>
    
    
    
    
    <category term="html5 up" scheme="https://developerschallenges.com/tags/html5-up/"/>
    
    <category term="styling" scheme="https://developerschallenges.com/tags/styling/"/>
    
    <category term="website" scheme="https://developerschallenges.com/tags/website/"/>
    
  </entry>
  
  <entry>
    <title>Azure Subscription Chooser PowerShell Script</title>
    <link href="https://developerschallenges.com/2019/07/16/azure-subscription-chooser-powershell-script/"/>
    <id>https://developerschallenges.com/2019/07/16/azure-subscription-chooser-powershell-script/</id>
    <published>2019-07-15T22:00:00.000Z</published>
    <updated>2020-10-31T15:14:18.508Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2019-07-16-azure-subscription-chooser-powershell-script/hero.png"><p>If you want to execute a PowerShell scripts that does something in Azure, you might want to start your script with making sure the right subscription is chosen.</p><a id="more"></a><hr><p>I had a task to automate creation of Azure resources required for an application that we were building. I used a combination of ARM Templates and Azure PowerShell to create the resources, but I had to make sure that whoever would run the script had an option of choosing whichever subscription they wanted. This way it was easy to package up the application, and just have single script that will set up required cloud resources.</p><p>If you are just starting with Azure, you probably have only one tenant and only one Pay-As-You-Go subscription. But if you are a regular Azure user, you might have your MSDN subscription, your company’s subscription, plus any other subscriptions attached to one or more of your customers.</p><script src="https://gist.github.com/dalibormesaric/2d9014ff3eba0b7261a557d7a1ff23ac.js"></script><p>While creating this script I found an interesting behavior in the <code>Connect-AzAccount</code> step. You might not be offered subscriptions from the account you signed in with. This script fixes that, and details are linked in commented out code.</p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2019-07-16-azure-subscription-chooser-powershell-script/hero.png&quot;&gt;

&lt;p&gt;If you want to execute a PowerShell scripts that does something in Azure, you might want to start your script with making sure the right subscription is chosen.&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="powershell" scheme="https://developerschallenges.com/tags/powershell/"/>
    
    <category term="script" scheme="https://developerschallenges.com/tags/script/"/>
    
  </entry>
  
  <entry>
    <title>NDC London 2018 Recap</title>
    <link href="https://developerschallenges.com/2018/02/11/ndc-london-2018-recap/"/>
    <id>https://developerschallenges.com/2018/02/11/ndc-london-2018-recap/</id>
    <published>2018-02-10T23:00:00.000Z</published>
    <updated>2020-10-31T15:14:20.571Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2018-02-11-ndc-london-2018-recap/hero.png"><p>Three weeks ago I had the opportunity to finally see in person some of the heroes from the industry that I’m working in. They have just released videos of the talks I attended so here is a recap!</p><a id="more"></a><hr><p>This was also a great opportunity to re-unite with some old friends whom I have see only once since we moved from our hometown. Me and <a href="https://twitter.com/pootzko">Kit</a> decided that London would be a good place to meet, and <a href="https://twitter.com/dmilasinovic">Dalibor</a> was already there.</p><img src="/images/posts/2018-02-11-ndc-london-2018-recap/me_kit_dalibor.png"><p>The conference itself was a source of a lot of information from various experts in the industry, so here is the list of talks that I attended with some takeaways that I could remember:</p><p><a href="https://ndc-london.com/talk/keynote-what-is-programming-anyway/">Keynote: What is programming anyway?</a> (<a href="https://vimeo.com/254635626">video</a>)<br>Opening keynote was held by <a href="https://twitter.com/Felienne">Felienne</a> and it certainly brought a different perspective on how to look at programming. She also said that programmers usually live in their own bubbles, and like to protect their own thing. That’s why it might be hard to introduce diversity into some teams.</p><p><a href="https://ndc-london.com/talk/identityserver-for-asp.net-core-2/">IdentityServer for ASP.NET Core 2: Overview, New Features, Enhancements</a> (<a href="https://vimeo.com/254635632">video</a>)<br>I had a chance to listen to <a href="https://twitter.com/leastprivilege">Dominick Baier</a> few weeks before the conference, but this time he was accompanied by his colleague <a href="https://twitter.com/BrockLAllen">Brock Allen</a>. Security is a difficult topic and I might have to listen to their talks few more times :)</p><p><a href="https://ndc-london.com/talk/authorization-is-hard/">Authorization is hard! Implementing Authorization in Web Applications and APIs</a> (<a href="https://vimeo.com/254635640">video</a>)<br>Follow up talk by Dominick and Brock where they showcased their new project - <a href="https://github.com/PolicyServer">PolicyServer</a>. This is a gread companion product for their <a href="https://github.com/identityserver">IdentityServer</a> and ASP.NET Core.</p><blockquote class="twitter-tweet tw-align-center" data-lang="en"><p lang="en" dir="ltr">Announcing PolicyServer <a href="https://twitter.com/hashtag/ndclondon?src=hash&amp;ref_src=twsrc%5Etfw">#ndclondon</a><a href="https://t.co/9fjJgktzaM">https://t.co/9fjJgktzaM</a></p>&mdash; Dominick Baier (@leastprivilege) <a href="https://twitter.com/leastprivilege/status/953611773948645376?ref_src=twsrc%5Etfw">January 17, 2018</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p><a href="https://ndc-london.com/talk/diagnosing-issues-in-asp.net-core-applications/">Diagnosing issues in ASP.NET Core Applications</a> (<a href="https://vimeo.com/254635669">video</a>)<br>Finally I was able to see Damian Edwards and David Fowler live! The slides and demos from the talk are available on <a href="https://github.com/davidfowl/NdcLondon2018">David’s GitHub</a>.</p><blockquote class="twitter-tweet tw-align-center" data-lang="en"><p lang="en" dir="ltr">Finally listening to <a href="https://twitter.com/DamianEdwards?ref_src=twsrc%5Etfw">@DamianEdwards</a> and <a href="https://twitter.com/davidfowl?ref_src=twsrc%5Etfw">@davidfowl</a> live! <a href="https://twitter.com/hashtag/ndclondon?src=hash&amp;ref_src=twsrc%5Etfw">#ndclondon</a> <a href="https://t.co/XufWorCO3z">pic.twitter.com/XufWorCO3z</a></p>&mdash; Dalibor Mesarić (@dalibormesaric) <a href="https://twitter.com/dalibormesaric/status/953623062209028096?ref_src=twsrc%5Etfw">January 17, 2018</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>This was a really interesting talk on figuring out the right way to do async in your application, and what you should absolutely not do.</p><p><a href="https://ndc-london.com/talk/refactoring-to-immutability/">Refactoring to Immutability</a> (<a href="https://vimeo.com/254635646">video</a>)</p><p><a href="https://ndc-london.com/talk/asp.net/">What’s next for ASP.NET Core?</a><br>Second talk by Damian and David where they showed what is coming to ASP.NET Core. Interesting thing was moving the identity code that is part of the New MVC App template to a NuGet package. They had to make some more framework changes to make this possible, and all that is part of the new release too. Another thing was IHttpClientFactory - finally the right was to use HttpClient. Since then the [official roadmap] was released(<a href="https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/">https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/</a>).</p><p><a href="https://ndc-london.com/talk/c-7-1-and-7-2-the-releases-you-didnt-know-you-had/">C# 7.1, and 7.2: The releases you didn’t know you had</a> (<a href="https://vimeo.com/254635654">video</a>)<br>Initially this talk was supposed to be done only by Bill Wagner who is a member of the C# standards committee, but Jon Skeet was around so they joined forces. They talked about new features in the latest releases of C#, and mentioned some future goodness that might be coming in C# 8. Jon Skeet was mostly complaning how he is not able to finish his book if they keep releasing minor version :).</p><p><a href="https://ndc-london.com/talk/building-a-raspberry-pi-kubernetes-cluster-and-running-.net-core/">Building a Raspberry Pi Kubernetes Cluster and running .NET Core</a> (<a href="https://vimeo.com/254635761">video</a>)</p><p><a href="https://ndc-london.com/talk/an-opinionated-approach-to-asp-net-core/">An Opinionated Approach to ASP.NET Core</a> (<a href="https://vimeo.com/254635767">video</a>)</p><p><a href="https://ndc-london.com/talk/building-for-resiliency-and-scale-in-the-cloud/">Building for Resiliency and Scale in the Cloud</a> (<a href="https://vimeo.com/254635770">video</a>)</p><p><a href="https://ndc-london.com/talk/hack-your-career/">Hack Your Career</a> (<a href="https://vimeo.com/254635778">video</a>)</p><p><a href="https://ndc-london.com/talk/probing-the-mysterys-of-saturns-e-ring-with-postgresql/">Probing the Mysteries of Saturn’s E-Ring with PostgreSQL</a> (<a href="https://vimeo.com/254635780">video</a>)<br>I really enjoyed this talk by <a href="https://rob.conery.io/">Rob Corney</a>. He had an interesting story in the space domain, and he used PostgreSQL to explore that domain. He also <a href="https://rob.conery.io/2018/01/17/my-new-book-about-postgresql-data-and-saturn-a-curious-moon/">wrote a book about it</a>.</p><p><a href="https://ndc-london.com/talk/github-beyond-your-browser/">GitHub Beyond your Browser</a> (<a href="https://vimeo.com/254635789">video</a>)<br><a href="https://haacked.com/">Phil Haack</a> showed tools like <a href="https://atom.io/">Atom text editor</a> and <a href="https://desktop.github.com/">GitHub Desktop</a> that help developers be more productive. There is more to GitHub then just a web app.</p><p><a href="https://ndc-london.com/talk/net-rocks-live-with-jon-skeet-and-bill-wagner-two-nice-c-people/">.NET Rocks Live with Jon Skeet and Bill Wagner – Two Nice C# People</a> (<a href="https://vimeo.com/254635800">video</a>)</p><p><a href="https://ndc-london.com/talk/keynote-the-modern-cloud/">Keynote: The Modern Cloud</a> (<a href="https://vimeo.com/254635976">video</a>)</p><p><a href="https://ndc-london.com/talk/web-apps-cant-really-do-that-can-they/">Web Apps can’t really do <em>that</em>, can they?</a> (<a href="https://vimeo.com/254635980">video</a>)</p><p><a href="https://ndc-london.com/talk/hello-world-show-live-on-stage-with-heather-and-spencer/">The Hello World Show Live with Scott Hanselman, Troy Hunt, Felienne, and Jon Skeet</a> (<a href="https://vimeo.com/254635986">video</a>)</p><p><a href="https://ndc-london.com/talk/tba-1/">Tips &amp; Tricks with Azure</a> (<a href="https://vimeo.com/254635995">video</a>)</p><p><a href="https://ndc-london.com/talk/solving-diabetes-with-an-open-source-artificial-pancreas/">Solving Diabetes with an Open Source Artificial Pancreas</a><br>Another talk by <a href="https://www.hanselman.com/">Scott Hanselman</a> where he explains how he is basically fighting to survive using tech to his advantage. He previously <a href="https://www.hanselman.com/blog/ThePromisingStateOfDiabetesTechnologyIn2016.aspx">blogged about it</a> but it was great to hear his story. He even hacked his <a href="https://www.hanselman.com/blog/VisualizingYourRealtimeBloodSugarValuesANDAGitPromptOnWindowsPowerShellAndLinuxBash.aspx">PowerShell window</a> to monitor his blood sugar values.</p><p><a href="https://ndc-london.com/talk/why-im-not-leaving-.net/">Why I’m Not Leaving .NET</a> (<a href="https://vimeo.com/254636006">video</a>)<br><a href="https://blog.rendle.io/">Mark Rendle</a> was talking about all the interesting things that are happening in .NET world right now. He mentioned an <a href="https://blog.rendle.io/beeline-an-experiment/">experiment of his</a> about how to improve the performace by sending the data straight from the database to JSON stream. Another thing was compiling ASP.NET Core app to native code and get instant startup of your app. To get an overview of all that is possible to do today on the .NET platform was a perfect end of the conference.</p><hr><p>All in all this was more then a great conference and a great start of the new year!</p><blockquote class="twitter-tweet tw-align-center" data-lang="en"><p lang="en" dir="ltr">Spent the last few days at <a href="https://twitter.com/hashtag/ndclondon?src=hash&amp;ref_src=twsrc%5Etfw">#ndclondon</a> with an old friend <a href="https://twitter.com/pootzko?ref_src=twsrc%5Etfw">@pootzko</a> and we just met a new friend <a href="https://twitter.com/shanselman?ref_src=twsrc%5Etfw">@shanselman</a> :) <a href="https://t.co/eNAUdlVzhy">pic.twitter.com/eNAUdlVzhy</a></p>&mdash; Dalibor Mesarić (@dalibormesaric) <a href="https://twitter.com/dalibormesaric/status/954408954725130240?ref_src=twsrc%5Etfw">January 19, 2018</a></blockquote><script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2018-02-11-ndc-london-2018-recap/hero.png&quot;&gt;

&lt;p&gt;Three weeks ago I had the opportunity to finally see in person some of the heroes from the industry that I’m working in. They have just released videos of the talks I attended so here is a recap!&lt;/p&gt;</summary>
    
    
    
    
    <category term="conference" scheme="https://developerschallenges.com/tags/conference/"/>
    
    <category term="ndc" scheme="https://developerschallenges.com/tags/ndc/"/>
    
  </entry>
  
  <entry>
    <title>Passing Microsoft Exam 70-483</title>
    <link href="https://developerschallenges.com/2018/01/22/passing-microsoft-exam-70-483/"/>
    <id>https://developerschallenges.com/2018/01/22/passing-microsoft-exam-70-483/</id>
    <published>2018-01-21T23:00:00.000Z</published>
    <updated>2020-10-31T15:14:23.371Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2018-01-22-passing-microsoft-exam-70-483/hero.png"><p>After months of postponing I finally took the “Programming in C#” exam and I managed to pass it!</p><a id="more"></a><hr><p>As a personal goal I really wanted to take <a href="https://www.microsoft.com/en-us/learning/exam-70-483.aspx">this exam</a>. Even though I’m using C# on a daily basis, I knew there was a big part of the language and the framework still left to explore.</p><p>To prepare for it I watched <a href="https://channel9.msdn.com/Search?term=70-483#ch9Search&lang-en=en&pubDate=all">Channel 9 videos</a> from the official trainers to get familiar with what to expect form the exam. I also tested my C# skills with <a href="https://www.pluralsight.com/product/pluralsight-iq">Pluralsight IQ</a> and that gave me some confidence as well.</p><p>To be sure I have covered everything from the objectives, I went through the <a href="https://www.microsoftpressstore.com/store/exam-ref-70-483-programming-in-c-sharp-mcsd-9780735676824">official certification book</a>. Additional resource was <a href="http://shop.oreilly.com/product/9780596001810.do">C# in a Nutshell</a> which covers even more then the certificate requires.</p><p>The exam it self was exactly how it was described in one of those Channel 9 videos, so just follow the advice and you will do just fine.</p><p>Next step towards the MCSA: Web Applications certification is Exam 70-486 - Developing ASP.NET MVC Web Applications. They have just updated it to include ASP.NET Core questions, so it adds even more reasons to prepare for this!</p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2018-01-22-passing-microsoft-exam-70-483/hero.png&quot;&gt;

&lt;p&gt;After months of postponing I finally took the “Programming in C#” exam and I managed to pass it!&lt;/p&gt;</summary>
    
    
    
    
    <category term="certification" scheme="https://developerschallenges.com/tags/certification/"/>
    
    <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
    <category term="microsoft" scheme="https://developerschallenges.com/tags/microsoft/"/>
    
    <category term="c#" scheme="https://developerschallenges.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>Episerver: How to set a value on the server side and update the All Properties View?</title>
    <link href="https://developerschallenges.com/2017/12/30/episerver-how-to-set-a-value-on-the-server-side-and-update-the-all-properties-view/"/>
    <id>https://developerschallenges.com/2017/12/30/episerver-how-to-set-a-value-on-the-server-side-and-update-the-all-properties-view/</id>
    <published>2017-12-29T23:00:00.000Z</published>
    <updated>2020-10-31T15:14:25.843Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2017-12-30-how-to-set-a-value-on-the-server-side-and-update-the-all-properties-view/hero.png"><p>This article continues the series on Episerver All Properties View with describing how to update a property value on the server side and refresh the view.</p><a id="more"></a><hr><p>The scenario and the code shown in the article is building on top of what is described in one of my <a href="/2017/11/02/episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/">latest articles</a>.</p><p>This time in my scenario, when dropdown is changed, I want to assign that value to the <code>PetTypeName</code> property on the page. This might not sound like much of a challenge, and it is much easier to do on the frontend, but imagine what else can be done by having this action passed through the server side.</p><img src="/images/posts/2017-12-30-how-to-set-a-value-on-the-server-side-and-update-the-all-properties-view/update.gif"><p>First I added the property that I wanted to update on the server side to the page.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PetPage.cs</span></span><br><span class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">&quot;PetPage&quot;</span>, GUID = <span class="meta-string">&quot;317e0860-8466-4817-8c9e-b33e83a297a4&quot;</span>, Description = <span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetPage</span> : <span class="title">PageData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Added code</span></span><br><span class="line">    [<span class="meta">Display(Name = <span class="meta-string">&quot;Pet Type Name&quot;</span>, GroupName = SystemTabNames.Content, Order = 5)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">string</span> PetTypeName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="comment">// End of added code</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Display(Name = <span class="meta-string">&quot;Pet Type&quot;</span>, GroupName = SystemTabNames.Content, Order = 10)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> PetTypeBlock PetType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Next step was to extend the code that registered dropdown chages. The idea was to refesh the All Properties View, and this is done by getting current <code>pageLink</code> and requesting the view for that value. Here is <a href="https://world.episerver.com/documentation/Items/Developers-Guide/Episerver-Framework/7/User-Interface/Context-Sensitive-Components/">the official documentation</a>. This soulution is not exactly robust, since it uses <code>setTimeout</code>, but I was not able to figure this part out and it worked good enough.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PetTypeContainer.js</span></span><br><span class="line">define([</span><br><span class="line">    <span class="string">&quot;dojo/_base/declare&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;epi/shell/layout/SimpleContainer&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    declare,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    SimpleContainer</span></span></span><br><span class="line"><span class="function"><span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> declare([SimpleContainer], &#123;</span><br><span class="line">        petTypeDropdown: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line">        addChild: <span class="function"><span class="keyword">function</span> (<span class="params">child</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.inherited(<span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (child.name.indexOf(<span class="string">&quot;petType&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.petTypeDropdown = child;</span><br><span class="line">                <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    self._hideAll();</span><br><span class="line">                &#125;, <span class="number">0</span>);</span><br><span class="line">                <span class="built_in">this</span>.own(<span class="built_in">this</span>.petTypeDropdown.on(<span class="string">&quot;change&quot;</span>,</span><br><span class="line">                    <span class="function"><span class="keyword">function</span> (<span class="params">petType</span>) </span>&#123;</span><br><span class="line">                        self._hideAll();</span><br><span class="line">                        self._updateVisiblePetType(petType);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// Added code</span></span><br><span class="line">                        <span class="keyword">if</span> (self.petTypeDropdown.previousItem === <span class="literal">null</span> || self.petTypeDropdown.previousItem !== petType) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (self.petTypeDropdown.previousItem) &#123;</span><br><span class="line">                                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                    <span class="keyword">var</span> contextService = epi.dependency.resolve(<span class="string">&quot;epi.shell.ContextService&quot;</span>);</span><br><span class="line">                                    <span class="keyword">var</span> currentContext = contextService.currentContext;</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">var</span> contextParameters = &#123; <span class="attr">uri</span>: <span class="string">&#x27;epi.cms.contentdata:///&#x27;</span> + currentContext.id &#125;;</span><br><span class="line">                                    dojo.publish(<span class="string">&quot;/epi/shell/context/request&quot;</span>, [contextParameters]);</span><br><span class="line">                                &#125;, <span class="number">500</span>);</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            self.petTypeDropdown.previousItem = petType;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// End of added code</span></span><br><span class="line">                    &#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        _updateVisiblePetType: <span class="function"><span class="keyword">function</span> (<span class="params">petType</span>) </span>&#123;</span><br><span class="line">            $(<span class="built_in">document</span>).find(<span class="string">&#x27;input[name*=petType.selectedPetType]&#x27;</span>).closest(<span class="string">&#x27;ul&#x27;</span>).children().eq(petType).show();</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        _hideAll: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $.each([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="function"><span class="keyword">function</span> (<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">document</span>).find(<span class="string">&#x27;input[name*=petType.selectedPetType]&#x27;</span>).closest(<span class="string">&#x27;ul&#x27;</span>).children().eq(value).hide();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>To actually set the new property I used an <code>InitializableModule</code>.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DefaultPropertyValueInitialization.cs</span></span><br><span class="line">[<span class="meta">InitializableModule</span>]</span><br><span class="line">[<span class="meta">ModuleDependency(typeof(EPiServer.Web.InitializationModule))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DefaultPropertyValueInitialization</span> : <span class="title">IInitializableModule</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params">InitializationEngine context</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ServiceLocator.Current.GetInstance&lt;IContentEvents&gt;().LoadedContent += DefaultPropertyValueInitialization_LoadedContent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Uninitialize</span>(<span class="params">InitializationEngine context</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DefaultPropertyValueInitialization_LoadedContent</span>(<span class="params"><span class="keyword">object</span> sender, ContentEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (e.Content)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> PetPage petPage:</span><br><span class="line">                HandlePetPage(e, petPage);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HandlePetPage</span>(<span class="params">ContentEventArgs e, PetPage petPage</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        petPage = petPage.CreateWritableClone() <span class="keyword">as</span> PetPage;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (petPage != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            petPage.PetTypeName = Enum.GetName(<span class="keyword">typeof</span>(PetType), <span class="keyword">int</span>.Parse(petPage.PetType.SelectedPetType));</span><br><span class="line"></span><br><span class="line">            e.Content = petPage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>As I final step I added an UIDescriptor to default back to All Properties View, but this shouldn’t be required with the latest version of EpiServer, where it defaults to the last used view.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PetPageUiDescriptor.cs</span></span><br><span class="line">[<span class="meta">UIDescriptorRegistration</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetPageUiDescriptor</span> : <span class="title">UIDescriptor</span>&lt;<span class="title">PetPage</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PetPageUiDescriptor</span>(<span class="params"></span>) : <span class="title">base</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        DefaultView = CmsViewNames.AllPropertiesView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>By convention both <code>Initializers</code> and <code>Descriptors</code> should be in <code>ProjectRoot\Business</code> folder.</p><img src="/images/posts/2017-12-30-how-to-set-a-value-on-the-server-side-and-update-the-all-properties-view/project_tree.png"><p>All in all this solved a problem for our project, but it was still a big challenge to figure out the Dojo part.</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em><br><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/">ScreenToGif</a></em></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2017-12-30-how-to-set-a-value-on-the-server-side-and-update-the-all-properties-view/hero.png&quot;&gt;

&lt;p&gt;This article continues the series on Episerver All Properties View with describing how to update a property value on the server side and refresh the view.&lt;/p&gt;</summary>
    
    
    
    
    <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
    <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Stop looking at ads with Pi-hole</title>
    <link href="https://developerschallenges.com/2017/11/30/stop-looking-at-ads-with-pi-hole/"/>
    <id>https://developerschallenges.com/2017/11/30/stop-looking-at-ads-with-pi-hole/</id>
    <published>2017-11-29T23:00:00.000Z</published>
    <updated>2020-10-31T15:14:28.267Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2017-11-30-stop-looking-at-ads-with-pi-hole/pi-hole.png"><p>Quickly set up Pi-hole on Raspberry Pi and get rid of ads on all devices in your home!</p><a id="more"></a><hr><p>In countries where Black Friday is a thing, I think everyone spent a good part of their day just looking through all the deals. This year I finally bought a Raspberry Pi. Two actually.</p><img src="/images/posts/2017-11-30-stop-looking-at-ads-with-pi-hole/raspberry_pi.jpg"><p>Few weeks ago I re-discoverd an awesome project that promises to stop all ad traffic in your local network. I normally use <a href="https://github.com/gorhill/uBlock/">uBlock Origin</a> for browsers, but that still leaves all the other applications and devices unprotected. Enter <a href="https://pi-hole.net/">Pi-hole</a>!</p><p>Since this is a brand new Raspberry Pi and I didn’t want to connect any peripherals to it, I downloaded Raspbian Stretch Lite image from <a href="https://www.raspberrypi.org/downloads/raspbian/">the official web site</a>.</p><p>Next step was getting the image on the SD card. I’m using macOS and I followed <a href="https://www.raspberrypi.org/documentation/installation/installing-images/mac.md">the official tutorial</a>.</p><p>This was the command I ran after unmounting SD card with the Disk Utility.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd bs&#x3D;1m if&#x3D;2017-09-07-raspbian-stretch-lite.img of&#x3D;&#x2F;dev&#x2F;rdisk2 conv&#x3D;sync</span><br></pre></td></tr></table></figure><p>Next, in Terminal I ran the following commands.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;</span><br><span class="line">cd Volumes&#x2F;boot</span><br><span class="line">touch ssh</span><br><span class="line">touch wpa_supplicant.conf</span><br><span class="line">nano wpa_supplicant.conf</span><br></pre></td></tr></table></figure><p>Here I used nano to open the file and pasted in the <a href="https://www.raspberrypi.org/forums/viewtopic.php?t=191252">following</a>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">country&#x3D;US</span><br><span class="line">ctrl_interface&#x3D;DIR&#x3D;&#x2F;var&#x2F;run&#x2F;wpa_supplicant GROUP&#x3D;netdev</span><br><span class="line">update_config&#x3D;1</span><br><span class="line"></span><br><span class="line">network&#x3D;&#123;</span><br><span class="line">    ssid&#x3D;&quot;your_real_wifi_ssid&quot;</span><br><span class="line">    scan_ssid&#x3D;1</span><br><span class="line">    psk&#x3D;&quot;your_real_password&quot;</span><br><span class="line">    key_mgmt&#x3D;WPA-PSK</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>After this I ejected the SD card, inserted it in Raspberry Pi and plugged it in!</p><p>Next step was to find the ip address assigned to the Raspberry Pi, and I found the easiest way to see this is on the router.</p><p>Using that ip address I connected to the Raspberry Pi from Terminal. To connect on Windows you can use <a href="http://www.putty.org/">Putty</a>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh pi@IP_ADDRESS</span><br></pre></td></tr></table></figure><p>Default password is <em>raspberry</em></p><p>You can change the default password by typing in</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure><p>As the final step, I ran the command from the <a href="https://pi-hole.net/">official page</a>. Following the instruction was pretty straightforward and I’m surfing without ads on all devices!</p><img src="/images/posts/2017-11-30-stop-looking-at-ads-with-pi-hole/raspberry_pi_live.jpg">]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2017-11-30-stop-looking-at-ads-with-pi-hole/pi-hole.png&quot;&gt;

&lt;p&gt;Quickly set up Pi-hole on Raspberry Pi and get rid of ads on all devices in your home!&lt;/p&gt;</summary>
    
    
    
    
    <category term="raspberry pi" scheme="https://developerschallenges.com/tags/raspberry-pi/"/>
    
  </entry>
  
  <entry>
    <title>Episerver: All Properties component for showing and hiding content using a drop-down</title>
    <link href="https://developerschallenges.com/2017/11/02/episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/"/>
    <id>https://developerschallenges.com/2017/11/02/episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/</id>
    <published>2017-11-01T23:00:00.000Z</published>
    <updated>2020-10-31T15:14:30.285Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/hero.png"><p>As a follow up to my previous article about grouping properties in a property block, I’ll describe how to create a component for showing and hiding content in all properties mode using a drop-down.</p><a id="more"></a><hr><p>Having part of your form visible depending on some selection is a pretty normal use case. It is clear to the user what is selected and which other inputs are available, instead of just showing everything.</p><p>The challenge was figuring out how backend (Blocks) and frontend (Dojo) are working in together Episerver. There is a <a href="http://world.episerver.com/Blogs/Duong-Nguyen/Dates/2014/1/Country-Region-drop-down-lists-in-All-properties-mode/">great article that helped me understand this</a>. My goal was slightly different, so I’ll describe my thought process while figuring out the solution.</p><p>The scenario I will describe is following: There are three different pet types in our system. The user can choose only one using a dropdown. Each choice shows only properties for that pet type. Each pet type is a block with its own properties, and we are using each of those blocks as a <a href="/2017/04/22/episerver-how-to-get-title-in-all-properties-view">property block</a> next to a dropdown.</p><p>To create a demo project, follow instructions from the <a href="/2017/04/22/episerver-how-to-get-title-in-all-properties-view/">last blog post</a>.</p><p>First step is pretty straigh foreward - create a new page type or a block with all the properties described in the scenario. For a dropdown use <a href="https://world.episerver.com/blogs/Linus-Ekstrom/Dates/2013/12/SingleMultiple-selection-in-EPiServer-75/">single selection solution</a> from Episerver.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PetTypeBlock.cs</span></span><br><span class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">&quot;PetTypeBlock&quot;</span>, GUID = <span class="meta-string">&quot;5d414eb6-de73-49db-a12c-c750fce4578c&quot;</span>, Description = <span class="meta-string">&quot;&quot;</span>, AvailableInEditMode = false)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetTypeBlock</span> : <span class="title">BlockData</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">SelectOne(SelectionFactoryType = typeof(PetTypeSelectionFactory))</span>]</span><br><span class="line">    [<span class="meta">Display(Name = <span class="meta-string">&quot;Pet Type&quot;</span>, GroupName = SystemTabNames.Content, Order = 1)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">string</span> SelectedPetType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Display(Name = <span class="meta-string">&quot;Cat&quot;</span>, GroupName = SystemTabNames.Content, Order = 10)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> CatBlock CatBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Display(Name = <span class="meta-string">&quot;Dog&quot;</span>, GroupName = SystemTabNames.Content, Order = 20)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> DogBlock DogBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Display(Name = <span class="meta-string">&quot;Fish&quot;</span>, GroupName = SystemTabNames.Content, Order = 30)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> FishBlock FishBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">SetDefaultValues</span>(<span class="params">ContentType contentType</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">base</span>.SetDefaultValues(contentType);</span><br><span class="line"></span><br><span class="line">        SelectedPetType = ((<span class="keyword">int</span>)PetType.None).ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetTypeSelectionFactory</span> : <span class="title">ISelectionFactory</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IEnumerable&lt;ISelectItem&gt; <span class="title">GetSelections</span>(<span class="params">ExtendedMetadata metadata</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ISelectItem[] &#123;</span><br><span class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.None.ToString(), Value = ((<span class="keyword">int</span>)PetType.None).ToString() &#125;,</span><br><span class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.Cat.ToString(), Value = ((<span class="keyword">int</span>)PetType.Cat).ToString() &#125;,</span><br><span class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.Dog.ToString(), Value = ((<span class="keyword">int</span>)PetType.Dog).ToString() &#125;,</span><br><span class="line">            <span class="keyword">new</span> SelectItem() &#123; Text = PetType.Fish.ToString(), Value = ((<span class="keyword">int</span>)PetType.Fish).ToString() &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> PetType</span><br><span class="line">&#123;</span><br><span class="line">    None = <span class="number">0</span>,</span><br><span class="line">    Cat = <span class="number">1</span>,</span><br><span class="line">    Dog = <span class="number">2</span>,</span><br><span class="line">    Fish = <span class="number">3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here are the individual blocks whose content we want to toggle by changing the values in the dropdown.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CatBlock.cs</span></span><br><span class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">&quot;CatBlock&quot;</span>, GUID = <span class="meta-string">&quot;837e9ed7-03ae-4013-97f6-0db251f0a8e3&quot;</span>, Description = <span class="meta-string">&quot;&quot;</span>, AvailableInEditMode = false)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CatBlock</span> : <span class="title">BlockData</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DogBlock.cs</span></span><br><span class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">&quot;DogBlock&quot;</span>, GUID = <span class="meta-string">&quot;8055ac0e-27fb-44a2-bc9f-8cb146ab7e4f&quot;</span>, Description = <span class="meta-string">&quot;&quot;</span>, AvailableInEditMode = false)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DogBlock</span> : <span class="title">BlockData</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// FishBlock.cs</span></span><br><span class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">&quot;FishBlock&quot;</span>, GUID = <span class="meta-string">&quot;59f93439-8f49-4ba9-a01e-a62a97efb400&quot;</span>, Description = <span class="meta-string">&quot;&quot;</span>, AvailableInEditMode = false)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FishBlock</span> : <span class="title">BlockData</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Next step is to create editor descriptor so that Episerver knows on which object we want the Dojo script to load, and the actual path to the script. Editor descriptors are usually placed inside the <code>Business</code> folder. <code>ClientLayoutClass</code> path is related to what is described in the next step.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// StartPageEditorDescriptor.cs</span></span><br><span class="line">[<span class="meta">EditorDescriptorRegistration(TargetType = typeof(PetTypeBlock))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StartPageEditorDescriptor</span> : <span class="title">EditorDescriptor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ModifyMetadata</span>(<span class="params">ExtendedMetadata metadata, IEnumerable&lt;Attribute&gt; attributes</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">base</span>.ModifyMetadata(metadata, attributes);</span><br><span class="line">        metadata.Properties.Cast&lt;ExtendedMetadata&gt;().First().GroupSettings.ClientLayoutClass = <span class="string">&quot;myapp/editors/PetTypeContainer&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the root of your project in <code>modules.config</code> you have to declare what your Episerver scripts folder is - in this case it is in <code>ProjectRoot\ClientResources\Scripts</code>. ClientResources folder is Episerver convention.</p><img src="/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/project_tree.png"><p><code>myapp</code> is a connection between the script and <code>ClientLayoutClass</code> path from <code>StartPageEditorDescriptor</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dojo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">paths</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;myapp&quot;</span> <span class="attr">path</span>=<span class="string">&quot;Scripts&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">paths</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dojo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The script is the mix of Dojo and jQuery. It is not an elegant solution, but it works. The challenge was finding the right element which represents one of the added blocks we want to show/hide. I <a href="https://world.episerver.com/forum/developer-forum/Problems-and-bugs/Thread-Container/2017/3/internet-explorer-not-rendering-name-attribute/">asked on Epi formus</a> about some inconsistencies regarding generated HTML, but no cigar.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PetTypeContainer.js</span></span><br><span class="line">define([</span><br><span class="line">    <span class="string">&quot;dojo/_base/declare&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;epi/shell/layout/SimpleContainer&quot;</span></span><br><span class="line">],</span><br><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    declare,</span></span></span><br><span class="line"><span class="function"><span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    SimpleContainer</span></span></span><br><span class="line"><span class="function"><span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> declare([SimpleContainer], &#123;</span><br><span class="line">        petTypeDropdown: <span class="literal">null</span>,</span><br><span class="line"></span><br><span class="line">        addChild: <span class="function"><span class="keyword">function</span> (<span class="params">child</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.inherited(<span class="built_in">arguments</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (child.name.indexOf(<span class="string">&quot;petType&quot;</span>) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">this</span>.petTypeDropdown = child;</span><br><span class="line">                <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    self._hideAll();</span><br><span class="line">                &#125;, <span class="number">0</span>);</span><br><span class="line">                <span class="built_in">this</span>.own(<span class="built_in">this</span>.petTypeDropdown.on(<span class="string">&quot;change&quot;</span>,</span><br><span class="line">                    <span class="function"><span class="keyword">function</span> (<span class="params">petType</span>) </span>&#123;</span><br><span class="line">                        self._hideAll();</span><br><span class="line">                        self._updateVisiblePetType(petType);</span><br><span class="line">                    &#125;));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        _updateVisiblePetType: <span class="function"><span class="keyword">function</span> (<span class="params">petType</span>) </span>&#123;</span><br><span class="line">            $(<span class="built_in">document</span>).find(<span class="string">&#x27;input[name*=petType.selectedPetType]&#x27;</span>).closest(<span class="string">&#x27;ul&#x27;</span>).children().eq(petType).show();</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        _hideAll: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $.each([ <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> ], <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">document</span>).find(<span class="string">&#x27;input[name*=petType.selectedPetType]&#x27;</span>).closest(<span class="string">&#x27;ul&#x27;</span>).children().eq(value).hide();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>As a final step, if you created a block instead of a page - add that block compoment to the page.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PetPage.cs</span></span><br><span class="line">[<span class="meta">ContentType(DisplayName = <span class="meta-string">&quot;PetPage&quot;</span>, GUID = <span class="meta-string">&quot;317e0860-8466-4817-8c9e-b33e83a297a4&quot;</span>, Description = <span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetPage</span> : <span class="title">PageData</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Display(Name = <span class="meta-string">&quot;Pet Type&quot;</span>, GroupName = SystemTabNames.Content, Order = 10)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> PetTypeBlock PetType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The end result is a dropdown that shows different blocks.</p><img src="/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/dropdown.gif"><p>This turned out to be very usefull feature for my project, and hopefully you will find good use for it in your projects as well!</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em><br><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/">ScreenToGif</a></em></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2017-11-02-episerver-all-properties-component-for-showing-and-hiding-content-using-a-drop-down/hero.png&quot;&gt;

&lt;p&gt;As a follow up to my previous article about grouping properties in a property block, I’ll describe how to create a component for showing and hiding content in all properties mode using a drop-down.&lt;/p&gt;</summary>
    
    
    
    
    <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
    <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Episerver: How to get title in All Properties view?</title>
    <link href="https://developerschallenges.com/2017/04/22/episerver-how-to-get-title-in-all-properties-view/"/>
    <id>https://developerschallenges.com/2017/04/22/episerver-how-to-get-title-in-all-properties-view/</id>
    <published>2017-04-21T22:00:00.000Z</published>
    <updated>2020-10-31T15:14:32.531Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2017-04-22-episerver-how-to-get-title-in-all-properties-view/2017-04-22-episerver-how-to-get-title-in-all-properties-view.png"><p>In this article I will describe how to group properties and get a title above them. This will enable some other useful features as well.</p><a id="more"></a><hr><p>As I fairly reacently started using Episerver, I started where I think everyone starts these days - the Alloy demo. I saw a nicely grouped Logotype section, with a title and some property fields. I wanted to use the same grouping for the properties I was building for my block, but it was just not obvious where was this coming from.</p><img src="/images/posts/2017-04-22-episerver-how-to-get-title-in-all-properties-view/logotype.png"><p>Inspecting the HTML showed that the title is rendered as <code>legend</code> within a <code>fieldset</code>. The string for the title is actually coming from a Language XML File, which makes it extremely loosely coupled and hard to match unless you know what to look for. The block itself is added to the page in a controller and not in the page model.</p><p>There is an alternative to building shareable blocks that are applied using drag and drop to <code>ContentArea</code> property. Each block is decorated with <code>Content</code> attribute which can have <code>AvailableInEditMode</code> property. Setting that property to <code>false</code> will disallow crating this block as a sharable component. But the block is still very much usabe in our pages or other blocks as a property block.</p><p>Following the <a href="http://world.episerver.com/documentation/developer-guides/CMS/getting-started/creating-your-project/">Episerver Getting started</a> tutorial you can create a clean Episerver project to try this out.</p><p>Add a new block:</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ContentType(</span></span><br><span class="line"><span class="meta">    DisplayName = <span class="meta-string">&quot;PetBlock&quot;</span>,</span></span><br><span class="line"><span class="meta">    GUID = <span class="meta-string">&quot;ebbdbefb-b0e1-40fd-a13e-f408c16ee1fd&quot;</span>,</span></span><br><span class="line"><span class="meta">    Description = <span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PetBlock</span> : <span class="title">BlockData</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">CultureSpecific</span>]</span><br><span class="line">    [<span class="meta">Display(</span></span><br><span class="line"><span class="meta">        Name = <span class="meta-string">&quot;Name&quot;</span>,</span></span><br><span class="line"><span class="meta">        Description = <span class="meta-string">&quot;Name field&#x27;s description&quot;</span>,</span></span><br><span class="line"><span class="meta">        GroupName = SystemTabNames.Content,</span></span><br><span class="line"><span class="meta">        Order = 1)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And add it to your <code>StartPage</code> page model:</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ContentType(</span></span><br><span class="line"><span class="meta">    DisplayName = <span class="meta-string">&quot;StartPage&quot;</span>,</span></span><br><span class="line"><span class="meta">    GUID = <span class="meta-string">&quot;8205d905-b467-4d0c-ae2c-391d0640456a&quot;</span>,</span></span><br><span class="line"><span class="meta">    Description = <span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StartPage</span> : <span class="title">PageData</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Display(</span></span><br><span class="line"><span class="meta">        Name = <span class="meta-string">&quot;Pet&quot;</span>,</span></span><br><span class="line"><span class="meta">        GroupName = SystemTabNames.Content,</span></span><br><span class="line"><span class="meta">        Order = 5)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">virtual</span> PetBlock PetBlock &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>And there you have it! Whatever is you set the <code>Name</code> property to in the <code>Display</code> attribute, that will be your title in the all properties view!</p><p>Using blocks as properties is what allowed me to make an interseting feature i will describe in one of the future blog posts.</p><hr><p><em>To take screenshots I use <a href="https://app.prntscr.com/">LightShot</a></em></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2017-04-22-episerver-how-to-get-title-in-all-properties-view/2017-04-22-episerver-how-to-get-title-in-all-properties-view.png&quot;&gt;

&lt;p&gt;In this article I will describe how to group properties and get a title above them. This will enable some other useful features as well.&lt;/p&gt;</summary>
    
    
    
    
    <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
    <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Episerver Certification</title>
    <link href="https://developerschallenges.com/2016/12/11/episerver-certification/"/>
    <id>https://developerschallenges.com/2016/12/11/episerver-certification/</id>
    <published>2016-12-10T23:00:00.000Z</published>
    <updated>2020-10-31T15:14:34.636Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2016-12-11-episerver-certification/2016-12-11-episerver-certification.png"><p>As of this week I am an Episerver Certified Developer!</p><a id="more"></a><hr><p>I took the certification for Episerver CMS version 9, even though version 10 is the latest. I guess they have not updated the tests yet.</p><p>This was not something I planned, but since it is a tool that I am and will be using professionally on occasion, it was a good opportunity to test my knowledge. The invitiation for the certification came from the management only a couple of days before the actual exam, so I had limited time to prepare and my experience with Episerver is not that great. However, I’m familiar with building applications using ASP.NET, and it is the same framework Episerver is built on - so that helped.</p><p>Also, I have a lot of experience with building web applications using CMS systems. My first employer is the creator of a CMS called <a href="http://monox.mono-software.com/">MonoX</a>, and it shares some similarites with how Episerver works.</p><p>Here are some tips that helped me:</p><ul><li>go through the <a href="http://world.episerver.com/documentation/cms/">documentation</a> - I made my iPhone <a href="https://9to5mac.com/2014/10/04/ios-8-how-to-have-your-ios-device-read-text-for-you/">read that for me</a> during my daily commute</li><li>download the official <a href="https://marketplace.visualstudio.com/items?itemName=EPiServer.EpiserverCMSVisualStudioExtension">Visual Studio extension</a> - also try creating a solution using one of the templates</li><li>take a look at this <a href="https://www.youtube.com/channel/UCkGn2z3N6kPNi459OLVoF6Q">YouTube channel</a></li></ul><p>I look forward to building more web applications using Episerver!</p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2016-12-11-episerver-certification/2016-12-11-episerver-certification.png&quot;&gt;

&lt;p&gt;As of this week I am an Episerver Certified Developer!&lt;/p&gt;</summary>
    
    
    
    
    <category term="episerver" scheme="https://developerschallenges.com/tags/episerver/"/>
    
    <category term="certification" scheme="https://developerschallenges.com/tags/certification/"/>
    
    <category term="tips" scheme="https://developerschallenges.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Simple Angular with TypeScript setup in Visual Studio</title>
    <link href="https://developerschallenges.com/2016/10/28/simple-angular-with-typescript-setup-in-visual-studio/"/>
    <id>https://developerschallenges.com/2016/10/28/simple-angular-with-typescript-setup-in-visual-studio/</id>
    <published>2016-10-27T22:00:00.000Z</published>
    <updated>2020-10-31T15:14:36.684Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio.png"><p>Web development is getting more complex by the day and all the tooling and frameworks introduce more and more overhead whenever I want to quickly prototype something. No more!</p><a id="more"></a><hr><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Writing web apps or just AngularJS modules today requires just too many steps before I actually get to write any code. Sometimes I just want to create a quick prototype or a module outside of the main application. But having to go through the entire project setup phase is just exhausting and demotivational.</p><p>So I decided to focus just on the application code, and kinda patch quickly all the other parts. This can be done through some scaffolding tools like <a href="http://yeoman.io/">Yeoman</a> if you have time to discover everything, but since I use Visual Studio, I should really be taking advantage of that.</p><h2 id="Setting-up-the-infrastructure"><a href="#Setting-up-the-infrastructure" class="headerlink" title="Setting up the infrastructure"></a>Setting up the infrastructure</h2><p>So lets focus on the goal here. I want my prototype app or module to be decoupled from all the frameworks, infrastructure and other parts of a potentially larger application. That means NO Bower, Nuget, NPM, Webpack, Gulp, Grunt, MSBuild, whatever… We need to go <em>old school</em>!</p><p>Just like when you use <a href="https://plnkr.co/">Plunker</a>, <a href="https://jsfiddle.net/">JSFiddle</a> or something else, you would just include external libraries from a CDN. If there is no CDN available, just drag-and-drop the file into your scripts folder, and then include it in your index.html file. As for typings <em>.d.ts</em> files, just download those into a separate folder.</p><h2 id="AngularJS-with-TypeScript"><a href="#AngularJS-with-TypeScript" class="headerlink" title="AngularJS with TypeScript"></a>AngularJS with TypeScript</h2><p>I want my .ts files and a generated .js file I can include in index.html file. Available for about a <a href="https://blogs.msdn.microsoft.com/typescript/2015/07/20/announcing-typescript-1-5/">year</a> is <em><a href="https://www.typescriptlang.org/docs/handbook/tsconfig-json.html">tsconfig.json</a></em> which works great with the editor. This configuration file just tells your editor how to work with the typescript files, for which you would have to use a task runner before. One thing less in my quick setup.</p><p>This, together with Visual Studio, is the infrastructure I need to go from TypeScript to JavaScript.</p><h2 id="Simple-AngularJS-setup"><a href="#Simple-AngularJS-setup" class="headerlink" title="Simple AngularJS setup"></a>Simple AngularJS setup</h2><p>I created a simple <a href="https://github.com/dalibormesaric/simple-angular-with-typescript-setup-in-visual-studio">project</a> as a starting point for an app or module. This includes Bootstrap and AngularJS libraries, typings, and a simple module with a controller and a service. There is also a configured tsconfig.json file that compiles all TypeScript files.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>Now that the base is defined, I could easily build number of modules and couple them in a larger application. If there is a module I need, like a Bootstrap datepicker - I would just include that library from CDN or copy the code from GitHub.</p><p>This way I have a quick demo and a well organized prototype.</p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio/2016-10-28-simple-angular-with-typescript-setup-in-visual-studio.png&quot;&gt;

&lt;p&gt;Web development is getting more complex by the day and all the tooling and frameworks introduce more and more overhead whenever I want to quickly prototype something. No more!&lt;/p&gt;</summary>
    
    
    
    
    <category term="angularjs" scheme="https://developerschallenges.com/tags/angularjs/"/>
    
    <category term="typescript" scheme="https://developerschallenges.com/tags/typescript/"/>
    
    <category term="visual studio" scheme="https://developerschallenges.com/tags/visual-studio/"/>
    
    <category term="tooling" scheme="https://developerschallenges.com/tags/tooling/"/>
    
    <category term="setup" scheme="https://developerschallenges.com/tags/setup/"/>
    
  </entry>
  
  <entry>
    <title>UX Rant - September 2016 Edition</title>
    <link href="https://developerschallenges.com/2016/09/25/ux-rant-september-2016-edition/"/>
    <id>https://developerschallenges.com/2016/09/25/ux-rant-september-2016-edition/</id>
    <published>2016-09-24T22:00:00.000Z</published>
    <updated>2021-01-07T10:49:16.429Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/2016-09-25-ux-rant---september-2016-edition.png"><p>It looks like our proffession can’t agree on what the experiance on the web should be. Constant re-innovation just confuses me, so this is my rant.</p><a id="more"></a><hr><h2 id="Google’s-Olympics-Widget"><a href="#Google’s-Olympics-Widget" class="headerlink" title="Google’s Olympics Widget"></a>Google’s Olympics Widget</h2><p>Last month there were the olympics, and Google made a nice widget in their search so it was easy so look up athletes and medals per country. During this period sometimes athletes make unexpected results and that was the case for some from my country. I used to do a google search for “Croatia olympics” to see the latest results. I wanted to look up some of the athletes from the widget in google search and learn more about them. How I usually do this, is select a text, right click and select search with google.</p><p>But it this case the whole thing was a button, even though it was also a text. It was imposible to select a text and to a right click or even copy the text to clipboard.</p><img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/google-olympics.gif"><p>When it comes to web elements that should act on mouse click, the main ones are the button and the anchor element. Not the whole area behind the text with the text included. Especialy not with the right click. I hate when I lose my context and then have to go back to where I was just because of someone reinventing the button.</p><h2 id="Twitter-Search"><a href="#Twitter-Search" class="headerlink" title="Twitter Search"></a>Twitter Search</h2><p>This was on my rant todo list for a while. It’s about moving content after something is loaded on your page. I use twitter as an example, but there are so many cases of this terribe UX.</p><p>When I search for someone and I know their name will show up first, I type first letters with my left hand, and use my right hand to point the mouse to the first place where I expect the result. Except the result position changes if I’m not fast enough, and I click on a random thing that shows up there even though I never asked for it.</p><img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/twitter.gif"><p>Keep your “smart suggestions” content elsewhere it you really need to show it. And stop moving content around. This is much more annoying when an ad shows up where I wanted to click on a link, and I end up clicking on the ad instead.</p><h2 id="Google-Chrome-Backspace-Removal"><a href="#Google-Chrome-Backspace-Removal" class="headerlink" title="Google Chrome Backspace Removal"></a>Google Chrome Backspace Removal</h2><p>Web browsers should keep a promise of supporting the web that is, was and will be created. That goes with all surrounding experience in the browser. Navigation is very important, and the web is designed that you can navigate to new sites, but you always have to be able to go back.</p><p>I’m used to going back using backspace, and Chrome team invented new way of going back. Right Alt + Left Arrow. Try pressing that with one hand. Try it and feel the pain on the innovation. You can’t use the right Alt because that would rotate your screen in Windows.</p><img src="/images/posts/2016-09-25-ux-rant---september-2016-edition/backspace.gif"><p>Then they released an extension that fixes this, arguing that this is how it should be handeled - through an extension. Even though they removed the Chromecast extension and built it in the browser. These teams need to hang out together somethimes.</p><p>But this just goes well with the fact that google search hijacks your keyboard input and pressing backspace would delete the last letter even though the search box is not in focus. This is for every browser, even the ones where you would expect to go back by pressing backspace.</p><p>Some articles on this <em>feature</em>:</p><ul><li><a href="https://bugs.chromium.org/p/chromium/issues/detail?id=608016">https://bugs.chromium.org/…</a></li><li><a href="http://mashable.com/2016/08/17/google-chrome-backspace-extension">http://mashable.com/…</a></li><li><a href="https://www.engadget.com/2016/08/17/chrome-go-back-with-backspace/">https://www.engadget.com/…</a></li><li><a href="http://arstechnica.com/gadgets/2016/08/google-cast-gets-built-into-chrome/">http://arstechnica.com/…</a></li></ul><hr><p><em>To record gifs I use <a href="https://github.com/NickeManarin/ScreenToGif/">ScreenToGif</a></em></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2016-09-25-ux-rant---september-2016-edition/2016-09-25-ux-rant---september-2016-edition.png&quot;&gt;

&lt;p&gt;It looks like our proffession can’t agree on what the experiance on the web should be. Constant re-innovation just confuses me, so this is my rant.&lt;/p&gt;</summary>
    
    
    
    
    <category term="twitter" scheme="https://developerschallenges.com/tags/twitter/"/>
    
    <category term="ux" scheme="https://developerschallenges.com/tags/ux/"/>
    
    <category term="rant" scheme="https://developerschallenges.com/tags/rant/"/>
    
    <category term="google" scheme="https://developerschallenges.com/tags/google/"/>
    
    <category term="backspace" scheme="https://developerschallenges.com/tags/backspace/"/>
    
    <category term="search" scheme="https://developerschallenges.com/tags/search/"/>
    
    <category term="olympics" scheme="https://developerschallenges.com/tags/olympics/"/>
    
    <category term="widget" scheme="https://developerschallenges.com/tags/widget/"/>
    
  </entry>
  
  <entry>
    <title>How to run Graylog on Ubuntu Server in Hyper-V</title>
    <link href="https://developerschallenges.com/2016/06/01/how-to-run-graylog-on-ubuntu-server-in-hyper-v/"/>
    <id>https://developerschallenges.com/2016/06/01/how-to-run-graylog-on-ubuntu-server-in-hyper-v/</id>
    <published>2016-05-31T22:00:00.000Z</published>
    <updated>2020-10-31T15:14:41.435Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/posts/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v.png"><p>I wanted to set up Graylog log management tool on an Ubuntu Server running in Hyper-V. It has been a while since the last time I did this, and couple of things have changed…</p><a id="more"></a><hr><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><a href="https://www.graylog.org/">Graylog</a> is a log management tool that I first discovered a couple of years ago. I appreciate logging and monitoring while developing software for both capturing errors and seeing if anyone is actually using/testing the features you implemented. Having a centralized log management tool is very convenient to have an entire team aware of what is going on in software projects. Graylog is easy to set up and it has a nice dashboard with a powerful way of querying logs.</p><p>When I first set up Graylog it was called Graylog2 and it was still in pre-release phase. I knew I want to run an Ubuntu Server instance in an Azure VM. Since I’m a windows developer, setting up all the dependencies through bash is not something I enjoy, but luckily I found a cool script by <a href="https://twitter.com/mrlesmithjr">@mrlesmithjr</a> on his <a href="http://everythingshouldbevirtual.com/ubuntu-12-04-graylog2-installation">blog</a>. The process was pretty straightforward, and in couple of minutes I had Graylog2 running in an Azure VM. After that, all I had to was open the correct port and add GELF log4net provider to my project, and logs started streaming in.</p><p>Two years later, or now, I wanted to do the same thing, but of course the new versions of Graylog and its dependencies came out. So in order to run the latest and greatest I went back to the script I used the first time. Unfortunately, the author stopped the maintenance because he switched to a different way of managing software tools - using <a href="https://www.ansible.com/">Ansible</a>. This is not something I am interested investing in at the moment. All I wanted was a Graylog server on my Hyper-V VM. How hard can that be?</p><h2 id="Graylog-running-in-Hyper-V"><a href="#Graylog-running-in-Hyper-V" class="headerlink" title="Graylog running in Hyper-V"></a>Graylog running in Hyper-V</h2><p>When you go to the Graylog’s <a href="https://www.graylog.org/download">download page</a> you get a number of options to choose from. But if you are a .NET developer you’ll see a lot of things you have never heard of. Feel free to explore a bit because you never know what you might find interesting. But to proceed with the mission of running Graylog in Hyper-V, <a href="https://en.wikipedia.org/wiki/Open_Virtualization_Format"><strong>OVA</strong></a> is what you want.</p><p><strong>OVA</strong> is an open standard for distributing virtual appliances. When you click the link on Graylog’s download page, you’ll see more details on how to use it inside <a href="https://www.virtualbox.org/">VirtualBox</a>. You will also need to download VirtualBox in order to create a .VHD disk image that you will use in Hyper-V.</p><p>Quick google search showed me how to get from .OVA to .VHD. You should rename the .OVA extension to .TAR and extract the archive in a folder (e.g. C:\vm).</p><p>After that just run the following command to get the .VHD disk image.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Oracle\VirtualBox&gt;VBoxManage.exe clonehd --format vhd C:\vm\graylog-disk1.vmdk C:\vm\graylog.vhd</span><br></pre></td></tr></table></figure><p>As a final step all you need to do is create a new Virtual Machine in Hyper-V, and attach the .VHD file. Make sure your VM has enough RAM (4GB is recommended).</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>To recap:</p><ol><li>Download <a href="http://docs.graylog.org/en/2.0/pages/installation/virtual_machine_appliances.html">Graylog</a></li><li>Download <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a></li><li>Rename extension .OVA to .TAR and extract to <em>C:\vm</em></li><li>Run <em>C:\Program Files\Oracle\VirtualBox&gt;VBoxManage.exe clonehd –format vhd C:\vm\graylog-disk1.vmdk C:\vm\graylog.vhd</em></li><li>Create a VM with 4GB of RAM in Hyper-V and attach .VHD that you created</li></ol>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/images/posts/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v/2016-06-01-how-to-run-graylog-on-ubuntu-server-in-hyper-v.png&quot;&gt;

&lt;p&gt;I wanted to set up Graylog log management tool on an Ubuntu Server running in Hyper-V. It has been a while since the last time I did this, and couple of things have changed…&lt;/p&gt;</summary>
    
    
    
    
    <category term="graylog" scheme="https://developerschallenges.com/tags/graylog/"/>
    
    <category term="ubuntu" scheme="https://developerschallenges.com/tags/ubuntu/"/>
    
    <category term="hyper-v" scheme="https://developerschallenges.com/tags/hyper-v/"/>
    
    <category term="logging" scheme="https://developerschallenges.com/tags/logging/"/>
    
    <category term="virtualbox" scheme="https://developerschallenges.com/tags/virtualbox/"/>
    
  </entry>
  
  <entry>
    <title>Azure Mobile Services tips and tricks</title>
    <link href="https://developerschallenges.com/2013/05/27/azure-mobile-services-tips-and-tricks/"/>
    <id>https://developerschallenges.com/2013/05/27/azure-mobile-services-tips-and-tricks/</id>
    <published>2013-05-26T22:00:00.000Z</published>
    <updated>2020-10-31T15:46:53.044Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/css/images/thumb-default.png" alt="Azure Mobile Services tips and tricks"></p><p>Our local Microsoft office had an app competition held this year for a Windows Phone or Windows 8 applications. Anyone could sign up, so I gave it a shot.</p><a id="more"></a><hr><p><a href="https://mono.software/2013/05/27/Azure-Mobile-Services-tips-and-tricks/">Read more…</a></p><p>or</p><p><a href="http://monox.mono-software.com/blog/post/Mono/227/Azure-Mobile-Services-tips-and-tricks/">Read more…</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/css/images/thumb-default.png&quot; alt=&quot;Azure Mobile Services tips and tricks&quot;&gt;&lt;/p&gt;
&lt;p&gt;Our local Microsoft office had an app competition held this year for a Windows Phone or Windows 8 applications. Anyone could sign up, so I gave it a shot.&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="windows phone" scheme="https://developerschallenges.com/tags/windows-phone/"/>
    
    <category term="azure sql" scheme="https://developerschallenges.com/tags/azure-sql/"/>
    
    <category term="mobile services" scheme="https://developerschallenges.com/tags/mobile-services/"/>
    
  </entry>
  
  <entry>
    <title>Adding ASP.NET SimpleMembership to an existing MVC 4 application</title>
    <link href="https://developerschallenges.com/2013/05/07/adding-asp-net-simplemembership-to-an-existing-mvc-4-application/"/>
    <id>https://developerschallenges.com/2013/05/07/adding-asp-net-simplemembership-to-an-existing-mvc-4-application/</id>
    <published>2013-05-06T22:00:00.000Z</published>
    <updated>2020-10-31T15:46:47.621Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/css/images/thumb-default.png" alt="Adding ASP.NET SimpleMembership to an existing MVC 4 application"></p><p>Even though there is an MVC 4 template for a new Internet project that contains membership functionality, some people like to start building their apps from an empty project.</p><a id="more"></a><hr><p><a href="https://mono.software/2013/05/07/Adding-ASP-NET-SimpleMembership-to-an-existing-MVC-4-application/">Read more…</a></p><p>or</p><p><a href="http://monox.mono-software.com/blog/post/Mono/226/Adding-ASP-NET-SimpleMembership-to-an-existing-MVC-4-application/">Read more…</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/css/images/thumb-default.png&quot; alt=&quot;Adding ASP.NET SimpleMembership to an existing MVC 4 application&quot;&gt;&lt;/p&gt;
&lt;p&gt;Even though there is an MVC 4 template for a new Internet project that contains membership functionality, some people like to start building their apps from an empty project.&lt;/p&gt;</summary>
    
    
    
    
    <category term="simplemembership" scheme="https://developerschallenges.com/tags/simplemembership/"/>
    
    <category term="mvc" scheme="https://developerschallenges.com/tags/mvc/"/>
    
    <category term="asp.net" scheme="https://developerschallenges.com/tags/asp-net/"/>
    
  </entry>
  
  <entry>
    <title>WebCamp Zagreb - Lessons Learned</title>
    <link href="https://developerschallenges.com/2012/12/19/webcamp-zagreb-lessons-learned/"/>
    <id>https://developerschallenges.com/2012/12/19/webcamp-zagreb-lessons-learned/</id>
    <published>2012-12-18T23:00:00.000Z</published>
    <updated>2020-10-31T11:05:19.023Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/css/images/thumb-default.png" alt="WebCamp Zagreb - Lessons Learned"></p><p>Recently I found out about WebCamp Zagreb conference, and I was lucky enough to get a ticket. I really liked the format: two parallel lectures every 30 minutes.</p><a id="more"></a><hr><p><a href="http://monox.mono-software.com/blog/post/Mono/215/WebCamp-Zagreb-Lessons-Learned/">Read more…</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/css/images/thumb-default.png&quot; alt=&quot;WebCamp Zagreb - Lessons Learned&quot;&gt;&lt;/p&gt;
&lt;p&gt;Recently I found out about WebCamp Zagreb conference, and I was lucky enough to get a ticket. I really liked the format: two parallel lectures every 30 minutes.&lt;/p&gt;</summary>
    
    
    
    
    <category term="azure" scheme="https://developerschallenges.com/tags/azure/"/>
    
    <category term="design" scheme="https://developerschallenges.com/tags/design/"/>
    
    <category term="testing" scheme="https://developerschallenges.com/tags/testing/"/>
    
    <category term="wczg" scheme="https://developerschallenges.com/tags/wczg/"/>
    
    <category term="html" scheme="https://developerschallenges.com/tags/html/"/>
    
    <category term="heorku" scheme="https://developerschallenges.com/tags/heorku/"/>
    
    <category term="camp" scheme="https://developerschallenges.com/tags/camp/"/>
    
    <category term="web" scheme="https://developerschallenges.com/tags/web/"/>
    
    <category term="report" scheme="https://developerschallenges.com/tags/report/"/>
    
    <category term="phonegap" scheme="https://developerschallenges.com/tags/phonegap/"/>
    
    <category term="python" scheme="https://developerschallenges.com/tags/python/"/>
    
    <category term="zagreb" scheme="https://developerschallenges.com/tags/zagreb/"/>
    
    <category term="mongodb" scheme="https://developerschallenges.com/tags/mongodb/"/>
    
    <category term="responsive" scheme="https://developerschallenges.com/tags/responsive/"/>
    
  </entry>
  
  <entry>
    <title>TicTacToe 3D game in WebGL - Part I</title>
    <link href="https://developerschallenges.com/2012/08/20/tictactoe-3d-game-in-webgl-part-i/"/>
    <id>https://developerschallenges.com/2012/08/20/tictactoe-3d-game-in-webgl-part-i/</id>
    <published>2012-08-19T22:00:00.000Z</published>
    <updated>2020-10-31T15:30:04.002Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/css/images/thumb-default.png" alt="TicTacToe 3D game in WebGL - Part I"></p><p>In this blog post I’ll explain how to make a TicTacToe game in your browser. To keep up with the current technologies and make things a bit more interesting, this version will be in 3D.</p><a id="more"></a><hr><p><a href="http://monox.mono-software.com/blog/post/Mono/192/TicTacToe-3D-game-in-WebGL-Part-I/">Read more…</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/css/images/thumb-default.png&quot; alt=&quot;TicTacToe 3D game in WebGL - Part I&quot;&gt;&lt;/p&gt;
&lt;p&gt;In this blog post I’ll explain how to make a TicTacToe game in your browser. To keep up with the current technologies and make things a bit more interesting, this version will be in 3D.&lt;/p&gt;</summary>
    
    
    
    
    <category term="3d" scheme="https://developerschallenges.com/tags/3d/"/>
    
    <category term="blender" scheme="https://developerschallenges.com/tags/blender/"/>
    
    <category term="html 5" scheme="https://developerschallenges.com/tags/html-5/"/>
    
    <category term="webgl" scheme="https://developerschallenges.com/tags/webgl/"/>
    
    <category term="three.js" scheme="https://developerschallenges.com/tags/three-js/"/>
    
    <category term="tictactoe" scheme="https://developerschallenges.com/tags/tictactoe/"/>
    
  </entry>
  
  <entry>
    <title>Using XML data in Windows Phone apps</title>
    <link href="https://developerschallenges.com/2012/05/04/using-xml-data-in-windows-phone-apps/"/>
    <id>https://developerschallenges.com/2012/05/04/using-xml-data-in-windows-phone-apps/</id>
    <published>2012-05-03T22:00:00.000Z</published>
    <updated>2020-10-31T15:29:38.377Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/css/images/thumb-default.png" alt="Using XML data in Windows Phone apps"></p><p>Mobile applications are rarely totally self-contained - they often need to use data from various online sources. In this blog post we’ll describe how to pull XML content from a RSS feed and show it in a ListBox container. </p><a id="more"></a><hr><p><a href="http://monox.mono-software.com/blog/post/Mono/175/Using-XML-data-in-Windows-Phone-apps/">Read more…</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/css/images/thumb-default.png&quot; alt=&quot;Using XML data in Windows Phone apps&quot;&gt;&lt;/p&gt;
&lt;p&gt;Mobile applications are rarely totally self-contained - they often need to use data from various online sources. In this blog post we’ll describe how to pull XML content from a RSS feed and show it in a ListBox container. &lt;/p&gt;</summary>
    
    
    
    
    <category term="windows phone" scheme="https://developerschallenges.com/tags/windows-phone/"/>
    
    <category term="xml" scheme="https://developerschallenges.com/tags/xml/"/>
    
    <category term="wp7" scheme="https://developerschallenges.com/tags/wp7/"/>
    
    <category term="linq" scheme="https://developerschallenges.com/tags/linq/"/>
    
    <category term="loading" scheme="https://developerschallenges.com/tags/loading/"/>
    
    <category term="webclient" scheme="https://developerschallenges.com/tags/webclient/"/>
    
  </entry>
  
</feed>
